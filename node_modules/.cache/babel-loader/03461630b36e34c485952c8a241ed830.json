{"ast":null,"code":"import _objectSpread from \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/SubscriptionPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Checkbox, Form, Input, Header } from 'semantic-ui-react';\nimport { postToSubscriptionCreate } from '../../actions/subscriptionActions';\n\nclass Subscribe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      phone: \"\",\n      zip: \"\",\n      payload: {}\n    };\n\n    this.fetchShowPage = () => {\n      fetch('http://localhost:3000/api/v1/subscribe/');\n    };\n\n    this.handleFormChange = (fieldInputName, event) => {\n      switch (fieldInputName) {\n        case \"phone\":\n          this.setState(_objectSpread({}, this.state, {\n            phone: event.target.value\n          }));\n          break;\n\n        case \"zip\":\n          this.setState(_objectSpread({}, this.state, {\n            zip: event.target.value\n          }));\n\n        case \"url\":\n          this.setState(_objectSpread({}, this.state, {\n            url: \"http://localhost:3001/subscribe/\".concat(event.target.value)\n          }));\n          break;\n      }\n    };\n\n    this.dispatchSubscription = () => {\n      this.props.postToSubscriptionCreate(this.state);\n    };\n  }\n\n  componentDidMount() {// .then(r => r.json())\n    // .then(data => {\n    //   this.setState({...this.state, payload: data.payload})\n    // })\n  }\n\n  render() {\n    console.log(\"ARRTIST-SUB\", this.props);\n\n    if (!this.props.sessionsReducer.currentUser) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"this.props.subscriptionProps.title\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Form, {\n        onSubmit: this.dispatchSubscription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Phone Number\"), React.createElement(Input, {\n        placeholder: \"(xxx)\",\n        maxLength: \"3\",\n        type: \"number\",\n        step: \"0.01\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"xxx\",\n        maxLength: \"3\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"xxxx\",\n        maxLength: \"4\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))), React.createElement(Form.Field, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Zipcode\",\n        value: this.state.zip,\n        name: \"password\",\n        onChange: event => this.handleFormChange(\"zip\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Subscribe\"), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.url,\n        placeholder: \"Enter custom url\",\n        name: \"password\",\n        label: \"http://localhost:3001/subscribe/\",\n        onChange: event => this.handleFormChange(\"url\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postToSubscriptionCreate: newArtist => dispatch(postToSubscriptionCreate(newArtist))\n  };\n};\n\nconst mapStateToProps = state => {\n  state.subscriptionReducer.loading ? console.log(\"IS LOADING\") : console.log(\"DONE LOADING\");\n  debugger;\n\n  if (!this.props.sessionsReducer.currentUser) {\n    return _objectSpread({}, state, {\n      subscriptionProps: state.sessionsReducer.currentUser.subscriptionProps\n    });\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscribe);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/SubscriptionPage.js"],"names":["React","Component","connect","Button","Checkbox","Form","Input","Header","postToSubscriptionCreate","Subscribe","state","phone","zip","payload","fetchShowPage","fetch","handleFormChange","fieldInputName","event","setState","target","value","url","dispatchSubscription","props","componentDidMount","render","console","log","sessionsReducer","currentUser","mapDispatchToProps","dispatch","newArtist","mapStateToProps","subscriptionReducer","loading","subscriptionProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Checkbox, Form, Input, Header } from 'semantic-ui-react'\n\n\nimport { postToSubscriptionCreate } from '../../actions/subscriptionActions'\n\nclass Subscribe extends Component {\n  state={phone: \"\", zip: \"\", payload: {}}\n\n\n  componentDidMount(){\n\n      // .then(r => r.json())\n      // .then(data => {\n      //   this.setState({...this.state, payload: data.payload})\n      // })\n    }\n\nfetchShowPage = () => {\n  fetch('http://localhost:3000/api/v1/subscribe/')\n}\n\n  handleFormChange = (fieldInputName, event) => {\n    switch(fieldInputName){\n      case \"phone\":\n      this.setState( {...this.state, phone: event.target.value} )\n      break;\n      case \"zip\":\n      this.setState( {...this.state, zip: event.target.value} )\n      case \"url\":\n      this.setState( {...this.state, url: `http://localhost:3001/subscribe/${event.target.value}`} )\n      break;\n    }\n  }\n\n  dispatchSubscription = () => {\n    this.props.postToSubscriptionCreate(this.state)\n  }\n\n\n  render (){\n    console.log(\"ARRTIST-SUB\", this.props);\n    if(!this.props.sessionsReducer.currentUser){\n        return <h1>loading...</h1>\n    } else {\n      return (\n        <div>\n        <Header as='h1' textAlign='center'>{`${\"this.props.subscriptionProps.title\"}`}</Header>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n          <Form onSubmit={this.dispatchSubscription}>\n          <Form.Group inline>\n            <Form.Field required>\n              <label>Phone Number</label>\n              <Input placeholder='(xxx)' maxLength=\"3\" type=\"number\" step=\"0.01\"/>\n            </Form.Field>\n            <Form.Field required>\n              <Input placeholder='xxx' maxLength=\"3\" type=\"number\"/>\n            </Form.Field>\n            <Form.Field required>\n              <Input placeholder='xxxx' maxLength=\"4\" type=\"number\"/>\n            </Form.Field>\n          </Form.Group>\n            <Form.Field required>\n              <Input placeholder='Zipcode' value={this.state.zip} name=\"password\"  onChange={(event) => this.handleFormChange(\"zip\", event)}/>\n            </Form.Field>\n            <Button type='submit'>Subscribe</Button>\n            <Form.Field>\n              <Input value={this.state.url} placeholder='Enter custom url'name=\"password\" label='http://localhost:3001/subscribe/'  onChange={(event) => this.handleFormChange(\"url\", event)}/>\n            </Form.Field>\n          </Form>\n\n        </div>\n      )\n    }\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {postToSubscriptionCreate: (newArtist)=> dispatch(postToSubscriptionCreate(newArtist))}\n}\n\nconst mapStateToProps = (state) => {\n  state.subscriptionReducer.loading ? console.log(\"IS LOADING\") : console.log(\"DONE LOADING\")\n  debugger\n  if(!this.props.sessionsReducer.currentUser){\n    return {...state, subscriptionProps: state.sessionsReducer.currentUser.subscriptionProps}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscribe)\n"]},"metadata":{},"sourceType":"module"}