{"ast":null,"code":"import _objectSpread from \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/FanView/Subscribe.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Checkbox, Form, Input, Header, Popup, Icon, Modal } from 'semantic-ui-react';\nimport { postToSubscriptionCreate } from '../../actions/subscriptionActions';\n\nclass Subscribe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      phone1: \"\",\n      phone2: \"\",\n      phone3: \"\",\n      zip: \"\",\n      slug: \"\",\n      payload: {},\n      zipError: false\n      /****************************************************************\n      FETCHES\n      ****************************************************************/\n\n    };\n\n    this.fetchArtistShowPage = slug => {\n      fetch(\"http://localhost:3000/api/v1/subscribe/\".concat(slug)).then(r => r.json()).then(data => {\n        this.setState(_objectSpread({}, this.state, {\n          payload: data.payload\n        }));\n      });\n    };\n\n    this.handleFormSubmit = () => {\n      const isValidZip = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(this.state.zip);\n      const phone = \"1\" + \"\".concat(this.state.phone1 + this.state.phone2 + this.state.phone3);\n\n      if (isValidZip) {\n        this.props.postToSubscriptionCreate({\n          phone: phone,\n          zip: this.state.zip,\n          slug: this.state.slug\n        });\n      } else {\n        this.setState(_objectSpread({}, this.state, {\n          zip: \"\",\n          zipError: true\n        }));\n      }\n    };\n\n    this.handleFormChange = (fieldInputName, event) => {\n      switch (fieldInputName) {\n        case \"phone1\":\n          this.setState(_objectSpread({}, this.state, {\n            phone1: event.target.value\n          }));\n          break;\n\n        case \"phone2\":\n          this.setState(_objectSpread({}, this.state, {\n            phone2: event.target.value\n          }));\n          break;\n\n        case \"phone3\":\n          this.setState(_objectSpread({}, this.state, {\n            phone3: event.target.value\n          }));\n          break;\n\n        case \"zip\":\n          this.setState(_objectSpread({}, this.state, {\n            zip: event.target.value\n          }));\n          break;\n      }\n    };\n\n    this.handleZipcodeError = () => {\n      return !this.state.zipError ? this.zipInput() : this.zipInputError();\n    };\n\n    this.zipInputError = () => {\n      return React.createElement(Input, {\n        error: true,\n        placeholder: \"Invalid zipcode\",\n        value: this.state.zip,\n        name: \"password\",\n        onChange: event => this.handleFormChange(\"zip\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    };\n\n    this.zipInput = () => {\n      return React.createElement(Input, {\n        placeholder: \"Zipcode\",\n        value: this.state.zip,\n        name: \"password\",\n        onChange: event => this.handleFormChange(\"zip\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    };\n  }\n\n  componentDidMount() {\n    const slug = this.props.match.params.slug;\n\n    if (slug) {\n      this.setState(_objectSpread({}, this.state, {\n        slug\n      }));\n      this.fetchArtistShowPage(slug);\n    } else {\n      this.fetchArtistShowPage(this.props.currentUser.username);\n    }\n  }\n\n  render() {\n    console.log(\"PROPSSSSS\", this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      open: this.props.isSubscribed,\n      basic: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Header, {\n      textAlign: \"center\",\n      content: \"Thank you for subscribing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), this.state.payload.title && React.createElement(Header, {\n      as: \"h1\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"\".concat(this.state.payload.title)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(Input, {\n      placeholder: \"(xxx)\",\n      value: this.state.phone1,\n      maxLength: \"3\",\n      type: \"number\",\n      step: \"0.01\",\n      onChange: event => this.handleFormChange(\"phone1\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"xxx\",\n      value: this.state.phone2,\n      maxLength: \"3\",\n      type: \"number\",\n      onChange: event => this.handleFormChange(\"phone2\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"xxxx\",\n      value: this.state.phone3,\n      maxLength: \"4\",\n      type: \"number\",\n      onChange: event => this.handleFormChange(\"phone3\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))), React.createElement(Form.Field, {\n      width: 8,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.handleZipcodeError()), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Subscribe\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  console.log(\"SUB - DP\", dispatch);\n  return {\n    postToSubscriptionCreate: newArtist => dispatch(postToSubscriptionCreate(newArtist))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.sessionsReducer.currentUser,\n    isSubscribed: state.subscriptionReducer.isSubscribed\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscribe);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/FanView/Subscribe.js"],"names":["React","Component","connect","Button","Checkbox","Form","Input","Header","Popup","Icon","Modal","postToSubscriptionCreate","Subscribe","state","phone1","phone2","phone3","zip","slug","payload","zipError","fetchArtistShowPage","fetch","then","r","json","data","setState","handleFormSubmit","isValidZip","test","phone","props","handleFormChange","fieldInputName","event","target","value","handleZipcodeError","zipInput","zipInputError","componentDidMount","match","params","currentUser","username","render","console","log","isSubscribed","title","mapDispatchToProps","dispatch","newArtist","mapStateToProps","sessionsReducer","subscriptionReducer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,KAAhD,EAAuDC,IAAvD,EAA6DC,KAA7D,QAA0E,mBAA1E;AAGA,SAASC,wBAAT,QAAyC,mCAAzC;;AACA,MAAMC,SAAN,SAAwBX,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCY,KADgC,GAC1B;AAACC,MAAAA,MAAM,EAAE,EAAT;AAAaC,MAAAA,MAAM,EAAE,EAArB;AAAyBC,MAAAA,MAAM,EAAE,EAAjC;AAAqCC,MAAAA,GAAG,EAAE,EAA1C;AAA8CC,MAAAA,IAAI,EAAE,EAApD;AAAwDC,MAAAA,OAAO,EAAE,EAAjE;AAAqEC,MAAAA,QAAQ,EAAE;AAErF;;;;AAFM,KAD0B;;AAAA,SAkBhCC,mBAlBgC,GAkBTH,IAAD,IAAU;AAC9BI,MAAAA,KAAK,kDAA2CJ,IAA3C,EAAL,CACCK,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,aAAKC,QAAL,mBAAkB,KAAKd,KAAvB;AAA8BM,UAAAA,OAAO,EAAEO,IAAI,CAACP;AAA5C;AACD,OAJD;AAKD,KAxB+B;;AAAA,SA0BhCS,gBA1BgC,GA0Bb,MAAM;AACvB,YAAMC,UAAU,GAAG,4BAA4BC,IAA5B,CAAiC,KAAKjB,KAAL,CAAWI,GAA5C,CAAnB;AACA,YAAMc,KAAK,GAAG,gBAAS,KAAKlB,KAAL,CAAWC,MAAX,GAAoB,KAAKD,KAAL,CAAWE,MAA/B,GAAwC,KAAKF,KAAL,CAAWG,MAA5D,CAAd;;AAEA,UAAGa,UAAH,EAAc;AACZ,aAAKG,KAAL,CAAWrB,wBAAX,CAAoC;AAACoB,UAAAA,KAAK,EAAEA,KAAR;AAAed,UAAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWI,GAA/B;AAAoCC,UAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK;AAArD,SAApC;AACD,OAFD,MAEO;AACL,aAAKS,QAAL,mBAAkB,KAAKd,KAAvB;AAA8BI,UAAAA,GAAG,EAAE,EAAnC;AAAuCG,UAAAA,QAAQ,EAAE;AAAjD;AACD;AAEF,KApC+B;;AAAA,SAyChCa,gBAzCgC,GAyCb,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AAC5C,cAAOD,cAAP;AACE,aAAK,QAAL;AACE,eAAKP,QAAL,mBAAmB,KAAKd,KAAxB;AAA+BC,YAAAA,MAAM,EAAEqB,KAAK,CAACC,MAAN,CAAaC;AAApD;AACF;;AACA,aAAK,QAAL;AACE,eAAKV,QAAL,mBAAmB,KAAKd,KAAxB;AAA+BE,YAAAA,MAAM,EAAEoB,KAAK,CAACC,MAAN,CAAaC;AAApD;AACF;;AACA,aAAK,QAAL;AACE,eAAKV,QAAL,mBAAmB,KAAKd,KAAxB;AAA+BG,YAAAA,MAAM,EAAEmB,KAAK,CAACC,MAAN,CAAaC;AAApD;AACF;;AACA,aAAK,KAAL;AACE,eAAKV,QAAL,mBAAmB,KAAKd,KAAxB;AAA+BI,YAAAA,GAAG,EAAEkB,KAAK,CAACC,MAAN,CAAaC;AAAjD;AACF;AAZF;AAcD,KAxD+B;;AAAA,SA0DhCC,kBA1DgC,GA0DX,MAAM;AACzB,aAAO,CAAC,KAAKzB,KAAL,CAAWO,QAAZ,GAAuB,KAAKmB,QAAL,EAAvB,GAAyC,KAAKC,aAAL,EAAhD;AACD,KA5D+B;;AAAA,SA8DhCA,aA9DgC,GA8DhB,MAAM;AACpB,aACE,oBAAC,KAAD;AACA,QAAA,KAAK,MADL;AAEA,QAAA,WAAW,EAAC,iBAFZ;AAGA,QAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWI,GAHlB;AAIA,QAAA,IAAI,EAAC,UAJL;AAKA,QAAA,QAAQ,EAAGkB,KAAD,IAAW,KAAKF,gBAAL,CAAsB,KAAtB,EAA6BE,KAA7B,CALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KAtE+B;;AAAA,SAwEhCI,QAxEgC,GAwErB,MAAM;AACf,aACE,oBAAC,KAAD;AACA,QAAA,WAAW,EAAC,SADZ;AAEA,QAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWI,GAFlB;AAGA,QAAA,IAAI,EAAC,UAHL;AAIA,QAAA,QAAQ,EAAGkB,KAAD,IAAW,KAAKF,gBAAL,CAAsB,KAAtB,EAA6BE,KAA7B,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD,KA/E+B;AAAA;;AAOhCM,EAAAA,iBAAiB,GAAE;AACjB,UAAMvB,IAAI,GAAG,KAAKc,KAAL,CAAWU,KAAX,CAAiBC,MAAjB,CAAwBzB,IAArC;;AACA,QAAGA,IAAH,EAAQ;AACN,WAAKS,QAAL,mBAAkB,KAAKd,KAAvB;AAA8BK,QAAAA;AAA9B;AACA,WAAKG,mBAAL,CAAyBH,IAAzB;AACD,KAHD,MAGO;AACL,WAAKG,mBAAL,CAAyB,KAAKW,KAAL,CAAWY,WAAX,CAAuBC,QAAhD;AACD;AACF;;AAkEDC,EAAAA,MAAM,GAAG;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKnC,KAA9B;AACJ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKmB,KAAL,CAAWiB,YAAxB;AAAsC,MAAA,KAAK,MAA3C;AAA4C,MAAA,IAAI,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,2BAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFA,EAOE,KAAKpC,KAAL,CAAWM,OAAX,CAAmB+B,KAAnB,IAA4B,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,SAAS,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAuC,KAAKrC,KAAL,CAAWM,OAAX,CAAmB+B,KAA1D,EAP9B,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZA,EAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbA,EAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,EAgBE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKtB,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,OAAnB;AAA2B,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,MAA7C;AAAqD,MAAA,SAAS,EAAC,GAA/D;AAAmE,MAAA,IAAI,EAAC,QAAxE;AAAiF,MAAA,IAAI,EAAC,MAAtF;AAA6F,MAAA,QAAQ,EAAGqB,KAAD,IAAW,KAAKF,gBAAL,CAAsB,QAAtB,EAAgCE,KAAhC,CAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,KAAnB;AAAyB,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWE,MAA3C;AAAmD,MAAA,SAAS,EAAC,GAA7D;AAAiE,MAAA,IAAI,EAAC,QAAtE;AAA+E,MAAA,QAAQ,EAAGoB,KAAD,IAAW,KAAKF,gBAAL,CAAsB,QAAtB,EAAgCE,KAAhC,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,EAQE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,MAAnB;AAA0B,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWG,MAA5C;AAAoD,MAAA,SAAS,EAAC,GAA9D;AAAkE,MAAA,IAAI,EAAC,QAAvE;AAAgF,MAAA,QAAQ,EAAGmB,KAAD,IAAW,KAAKF,gBAAL,CAAsB,QAAtB,EAAgCE,KAAhC,CAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CADA,EAaE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE,CAAnB;AAAsB,MAAA,QAAQ,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKG,kBAAL,EADH,CAbF,EAgBE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhBF,CAhBF,CADF;AAqCD;;AAxH+B;;AA0HlC,MAAMa,kBAAkB,GAAIC,QAAD,IAAc;AACvCL,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBI,QAAxB;AACA,SAAO;AAACzC,IAAAA,wBAAwB,EAAG0C,SAAD,IAAcD,QAAQ,CAACzC,wBAAwB,CAAC0C,SAAD,CAAzB;AAAjD,GAAP;AACD,CAHD;;AAKA,MAAMC,eAAe,GAAIzC,KAAD,IAAW;AACjC,SAAO;AAAC+B,IAAAA,WAAW,EAAE/B,KAAK,CAAC0C,eAAN,CAAsBX,WAApC;AAAiDK,IAAAA,YAAY,EAAEpC,KAAK,CAAC2C,mBAAN,CAA0BP;AAAzF,GAAP;AACD,CAFD;;AAIA,eAAe/C,OAAO,CAACoD,eAAD,EAAkBH,kBAAlB,CAAP,CAA6CvC,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Checkbox, Form, Input, Header, Popup, Icon, Modal } from 'semantic-ui-react'\n\n\nimport { postToSubscriptionCreate } from '../../actions/subscriptionActions'\nclass Subscribe extends Component {\n  state={phone1: \"\", phone2: \"\", phone3: \"\", zip: \"\", slug: \"\", payload: {}, zipError: false}\n\n  /****************************************************************\n  FETCHES\n  ****************************************************************/\n\n  componentDidMount(){\n    const slug = this.props.match.params.slug\n    if(slug){\n      this.setState({...this.state, slug })\n      this.fetchArtistShowPage(slug)\n    } else {\n      this.fetchArtistShowPage(this.props.currentUser.username)\n    }\n  }\n\n\n  fetchArtistShowPage = (slug) => {\n    fetch(`http://localhost:3000/api/v1/subscribe/${slug}`)\n    .then(r => r.json())\n    .then(data => {\n      this.setState({...this.state, payload: data.payload})\n    })\n  }\n\n  handleFormSubmit = () => {\n    const isValidZip = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(this.state.zip);\n    const phone = \"1\" + `${this.state.phone1 + this.state.phone2 + this.state.phone3}`\n\n    if(isValidZip){\n      this.props.postToSubscriptionCreate({phone: phone, zip: this.state.zip, slug: this.state.slug})\n    } else {\n      this.setState({...this.state, zip: \"\", zipError: true})\n    }\n\n  }\n\n  /****************************************************************\n  FORM HELPERS\n  ****************************************************************/\n  handleFormChange = (fieldInputName, event) => {\n    switch(fieldInputName){\n      case \"phone1\":\n        this.setState( {...this.state, phone1: event.target.value} )\n      break;\n      case \"phone2\":\n        this.setState( {...this.state, phone2: event.target.value} )\n      break;\n      case \"phone3\":\n        this.setState( {...this.state, phone3: event.target.value} )\n      break;\n      case \"zip\":\n        this.setState( {...this.state, zip: event.target.value} )\n      break;\n    }\n  }\n\n  handleZipcodeError = () => {\n    return !this.state.zipError ? this.zipInput() : this.zipInputError()\n  }\n\n  zipInputError = () => {\n    return (\n      <Input\n      error\n      placeholder='Invalid zipcode'\n      value={this.state.zip}\n      name=\"password\"\n      onChange={(event) => this.handleFormChange(\"zip\", event)}/>)\n  }\n\n  zipInput = () => {\n    return (\n      <Input\n      placeholder='Zipcode'\n      value={this.state.zip}\n      name=\"password\"\n      onChange={(event) => this.handleFormChange(\"zip\", event)}/>)\n  }\n\n  render (){\n        console.log(\"PROPSSSSS\", this.state);\n    return (\n      <div>\n\n      <Modal open={this.props.isSubscribed} basic size='small'>\n        <Header textAlign=\"center\" content='Thank you for subscribing' />\n      </Modal>\n\n\n      { this.state.payload.title && <Header as='h1' textAlign='center'>{`${this.state.payload.title}`}</Header> }\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n\n        <Form onSubmit={this.handleFormSubmit}>\n        <Form.Group inline>\n          <Form.Field required>\n            <label>Phone Number</label>\n            <Input placeholder='(xxx)' value={this.state.phone1} maxLength=\"3\" type=\"number\" step=\"0.01\" onChange={(event) => this.handleFormChange(\"phone1\", event)}/>\n          </Form.Field>\n          <Form.Field required>\n            <Input placeholder='xxx' value={this.state.phone2} maxLength=\"3\" type=\"number\" onChange={(event) => this.handleFormChange(\"phone2\", event)}/>\n          </Form.Field>\n          <Form.Field required>\n            <Input placeholder='xxxx' value={this.state.phone3} maxLength=\"4\" type=\"number\" onChange={(event) => this.handleFormChange(\"phone3\", event)}/>\n          </Form.Field>\n        </Form.Group>\n          <Form.Field width={8} required>\n            {this.handleZipcodeError()}\n          </Form.Field>\n          <Button type='submit'>Subscribe</Button>\n        </Form>\n      </div>\n    )\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  console.log(\"SUB - DP\", dispatch);\n  return {postToSubscriptionCreate: (newArtist)=> dispatch(postToSubscriptionCreate(newArtist))}\n}\n\nconst mapStateToProps = (state) => {\n  return {currentUser: state.sessionsReducer.currentUser, isSubscribed: state.subscriptionReducer.isSubscribed}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscribe)\n"]},"metadata":{},"sourceType":"module"}