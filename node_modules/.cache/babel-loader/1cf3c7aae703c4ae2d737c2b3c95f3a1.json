{"ast":null,"code":"var _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts/BlastContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Header } from 'semantic-ui-react';\nimport BlastCard from './BlastCard';\n\nclass BlastContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.conditionallyRenderBlastCards = () => {\n      if (this.props.blasts) {\n        return this.renderBlastCards(this.props.blasts);\n      }\n    };\n\n    this.renderNoBlastsMessage = () => {\n      return this.props.blasts.length === 0 ? React.createElement(Header, {\n        as: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"No blasts yet\") : null;\n    };\n\n    this.renderBlastCards = blasts => {\n      return blasts.map(blast => {\n        return React.createElement(BlastCard, {\n          blast: blast,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  render() {\n    //TODO: list blasts by most recent--Filter by most successful?\n    return React.createElement(\"div\", {\n      id: \"blast-card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.renderNoBlastsMessage(), React.createElement(Card.Group, {\n      centered: true,\n      itemsPerRow: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.conditionallyRenderBlastCards()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.sessionsReducer.currentUser.token,\n    blasts: state.sessionsReducer.currentUser.blasts\n  };\n};\n\nexport default connect(mapStateToProps)(BlastContainer);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts/BlastContainer.js"],"names":["React","Component","connect","Card","Header","BlastCard","BlastContainer","conditionallyRenderBlastCards","props","blasts","renderBlastCards","renderNoBlastsMessage","length","map","blast","render","mapStateToProps","state","token","sessionsReducer","currentUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,mBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAErCM,6BAFqC,GAEL,MAAM;AACpC,UAAG,KAAKC,KAAL,CAAWC,MAAd,EAAqB;AACnB,eAAO,KAAKC,gBAAL,CAAsB,KAAKF,KAAL,CAAWC,MAAjC,CAAP;AACD;AACF,KANoC;;AAAA,SAQrCE,qBARqC,GAQb,MAAM;AAC3B,aAAO,KAAKH,KAAL,CAAWC,MAAX,CAAkBG,MAAlB,KAA6B,CAA7B,GAAiC,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAjC,GAA0E,IAAjF;AACF,KAVoC;;AAAA,SAYrCF,gBAZqC,GAYjBD,MAAD,IAAY;AAC7B,aAAOA,MAAM,CAACI,GAAP,CAAWC,KAAK,IAAI;AACzB,eAAO,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KAhBoC;AAAA;;AAkBrCC,EAAAA,MAAM,GAAE;AACN;AACA,WACE;AAAK,MAAA,EAAE,EAAC,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,qBAAL,EADL,EAEE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAqB,MAAA,WAAW,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,6BAAL,EADH,CAFF,CADF;AAQD;;AA5BoC;;AA+BvC,MAAMS,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACE,eAAN,CAAsBC,WAAtB,CAAkCF,KADpC;AAELT,IAAAA,MAAM,EAAEQ,KAAK,CAACE,eAAN,CAAsBC,WAAtB,CAAkCX;AAFrC,GAAP;AAID,CALD;;AAOA,eAAeP,OAAO,CAACc,eAAD,CAAP,CAAyBV,cAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Card, Header} from 'semantic-ui-react'\nimport BlastCard from './BlastCard'\n\nclass BlastContainer extends Component {\n  //If there are blasts to render..\n  conditionallyRenderBlastCards = () => {\n    if(this.props.blasts){\n      return this.renderBlastCards(this.props.blasts)\n    }\n  }\n\n  renderNoBlastsMessage = () => {\n     return this.props.blasts.length === 0 ? <Header as='h6'>No blasts yet</Header> : null\n  }\n\n  renderBlastCards = (blasts) => {\n    return blasts.map(blast => {\n      return <BlastCard blast={blast}/>\n    })\n  }\n\n  render(){\n    //TODO: list blasts by most recent--Filter by most successful?\n    return (\n      <div id=\"blast-card-container\">\n          {this.renderNoBlastsMessage()}\n        <Card.Group centered itemsPerRow={1}>\n          {this.conditionallyRenderBlastCards()}\n        </Card.Group>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.sessionsReducer.currentUser.token,\n    blasts: state.sessionsReducer.currentUser.blasts\n  }\n}\n\nexport default connect(mapStateToProps)(BlastContainer)\n"]},"metadata":{},"sourceType":"module"}