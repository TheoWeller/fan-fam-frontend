{"ast":null,"code":"var _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts/BlastContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Header, Icon, Grid, Segment } from 'semantic-ui-react';\nimport BlastCard from './BlastCard';\n\nclass BlastContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.conditionallyRenderBlastCards = () => {\n      if (this.props.blasts) {\n        return this.renderBlastCards(this.props.blasts);\n      }\n    };\n\n    this.renderNoBlastsMessage = () => {\n      if (this.props.blasts.length === 0) {\n        return React.createElement(\"div\", {\n          id: \"no-blast-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(Segment, {\n          centered: true,\n          inverted: true,\n          style: {\n            \"width\": \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(Header, {\n          textAlign: \"center\",\n          inverted: true,\n          as: \"h2\",\n          icon: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          inverted: true,\n          name: \"exclamation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }), \"No blasts yet\")));\n      }\n    };\n\n    this.renderBlastCards = blasts => {\n      return blasts.reverse().map(blast => {\n        return React.createElement(BlastCard, {\n          blast: blast,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  render() {\n    //TODO: list blasts by most recent--Filter by most successful?\n    return React.createElement(\"div\", {\n      id: \"blast-card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.renderNoBlastsMessage(), React.createElement(Grid, {\n      padded: true,\n      columns: 2,\n      divided: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.conditionallyRenderBlastCards()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.sessionsReducer.currentUser.token,\n    blasts: state.sessionsReducer.currentUser.blasts\n  };\n};\n\nexport default connect(mapStateToProps)(BlastContainer);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts/BlastContainer.js"],"names":["React","Component","connect","Card","Header","Icon","Grid","Segment","BlastCard","BlastContainer","conditionallyRenderBlastCards","props","blasts","renderBlastCards","renderNoBlastsMessage","length","reverse","map","blast","render","mapStateToProps","state","token","sessionsReducer","currentUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,OAAlC,QAAgD,mBAAhD;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAErCS,6BAFqC,GAEL,MAAM;AACpC,UAAG,KAAKC,KAAL,CAAWC,MAAd,EAAqB;AACnB,eAAO,KAAKC,gBAAL,CAAsB,KAAKF,KAAL,CAAWC,MAAjC,CAAP;AACD;AACF,KANoC;;AAAA,SAQrCE,qBARqC,GAQb,MAAM;AAC5B,UAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBG,MAAlB,KAA6B,CAAhC,EAAkC;AAChC,eACE;AAAK,UAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,QAAQ,MAAjB;AAAkB,UAAA,QAAQ,MAA1B;AAA2B,UAAA,KAAK,EAAE;AAAC,qBAAQ;AAAT,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,QAAQ,MAAnC;AAAoC,UAAA,EAAE,EAAC,IAAvC;AAA4C,UAAA,IAAI,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,QAAQ,MAAd;AAAe,UAAA,IAAI,EAAC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,kBADF,CADF,CADF;AAUD;AACF,KArBoC;;AAAA,SAuBrCF,gBAvBqC,GAuBjBD,MAAD,IAAY;AAC7B,aAAOA,MAAM,CAACI,OAAP,GAAiBC,GAAjB,CAAqBC,KAAK,IAAI;AACnC,eAAO,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KA3BoC;AAAA;;AA6BrCC,EAAAA,MAAM,GAAE;AACN;AACA,WACE;AAAK,MAAA,EAAE,EAAC,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKL,qBAAL,EADD,EAEE,oBAAC,IAAD;AAAM,MAAA,MAAM,MAAZ;AAAa,MAAA,OAAO,EAAE,CAAtB;AAAyB,MAAA,OAAO,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,6BAAL,EADH,CAFF,CADF;AAQD;;AAvCoC;;AA0CvC,MAAMU,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACE,eAAN,CAAsBC,WAAtB,CAAkCF,KADpC;AAELV,IAAAA,MAAM,EAAES,KAAK,CAACE,eAAN,CAAsBC,WAAtB,CAAkCZ;AAFrC,GAAP;AAID,CALD;;AAOA,eAAeV,OAAO,CAACkB,eAAD,CAAP,CAAyBX,cAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Card, Header, Icon, Grid, Segment} from 'semantic-ui-react'\nimport BlastCard from './BlastCard'\n\nclass BlastContainer extends Component {\n  //If there are blasts to render..\n  conditionallyRenderBlastCards = () => {\n    if(this.props.blasts){\n      return this.renderBlastCards(this.props.blasts)\n    }\n  }\n\n  renderNoBlastsMessage = () => {\n    if(this.props.blasts.length === 0){\n      return (\n        <div id=\"no-blast-message\">\n          <Segment centered inverted style={{\"width\":\"100%\"}}>\n            <Header textAlign='center' inverted as='h2' icon>\n              <Icon inverted name='exclamation' />\n              No blasts yet\n            </Header>\n          </Segment>\n        </div>\n      )\n    }\n  }\n\n  renderBlastCards = (blasts) => {\n    return blasts.reverse().map(blast => {\n      return <BlastCard blast={blast}/>\n    })\n  }\n\n  render(){\n    //TODO: list blasts by most recent--Filter by most successful?\n    return (\n      <div id=\"blast-card-container\">\n      {this.renderNoBlastsMessage()}\n        <Grid padded columns={2} divided>\n          {this.conditionallyRenderBlastCards()}\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.sessionsReducer.currentUser.token,\n    blasts: state.sessionsReducer.currentUser.blasts\n  }\n}\n\nexport default connect(mapStateToProps)(BlastContainer)\n"]},"metadata":{},"sourceType":"module"}