{"ast":null,"code":"var _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/FanbaseStats.js\";\nimport React, { Component } from 'react';\nimport { Grid, Segment, Statistic, Button, Icon, Header, ivider } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport Clipboard from 'clipboard';\nimport TopCities from './StatComponents/TopCities';\nimport TopStates from './StatComponents/TopStates';\nimport GeneralStats from './StatComponents/GeneralStats';\n\nclass FanbaseStats extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderStats = (stats, category) => {\n      const arrayOfStats = Object.entries(stats);\n      return arrayOfStats.map(stat => {\n        return React.createElement(Segment, {\n          horizontal: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(Statistic, {\n          size: \"small\",\n          label: stat[0],\n          value: stat[1],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        })));\n      });\n    };\n  }\n\n  componentDidMount() {\n    new Clipboard('#copy-url-btn');\n  }\n\n  render() {\n    const url = \"http://localhost:3001/subscribe/\".concat(this.props.slug); //FOR COMPYING TO CLIPBOARD\n\n    return React.createElement(\"div\", {\n      id: \"fanbase-stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      centered: true,\n      divided: true,\n      inverted: true,\n      columns: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(TopCities, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      width: 4,\n      id: \"fanbase-stats-middle-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"user-subscription-copy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Header, {\n      inverted: true,\n      as: \"h2\",\n      content: \"My Subscription Page\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Button, {\n      size: \"massive\",\n      animated: \"fade\",\n      icon: true,\n      labelPosition: \"right\",\n      id: \"copy-url-btn\",\n      basic: true,\n      inverted: true,\n      size: \"large\",\n      type: \"button\",\n      \"data-clipboard-text\": url,\n      \"data-clipboard-action\": \"copy\",\n      onClick: () => this.copySubscriptionLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Button.Content, {\n      visible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"http://localhost:3001/subscribe/\".concat(this.props.slug)), React.createElement(Button.Content, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Click to copy...\"), React.createElement(Icon, {\n      name: \"copy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))), React.createElement(GeneralStats, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(TopStates, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nconst mapStateToProps = state => {\n  return {\n    stats: state.sessionsReducer.currentUser.fanbase,\n    slug: state.sessionsReducer.currentUser.subscriptionProps.slug\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FanbaseStats);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/FanbaseStats.js"],"names":["React","Component","Grid","Segment","Statistic","Button","Icon","Header","ivider","connect","Clipboard","TopCities","TopStates","GeneralStats","FanbaseStats","renderStats","stats","category","arrayOfStats","Object","entries","map","stat","componentDidMount","render","url","props","slug","copySubscriptionLink","mapDispatchToProps","dispatch","mapStateToProps","state","sessionsReducer","currentUser","fanbase","subscriptionProps"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport { Grid, Segment, Statistic, Button, Icon, Header, ivider} from 'semantic-ui-react'\nimport { connect } from 'react-redux';\nimport Clipboard from 'clipboard';\n\nimport TopCities from './StatComponents/TopCities'\nimport TopStates from './StatComponents/TopStates'\nimport GeneralStats from './StatComponents/GeneralStats'\n\nclass FanbaseStats extends Component {\n\n  componentDidMount(){\n    new Clipboard('#copy-url-btn');\n  }\n\n  renderStats = (stats, category) => {\n    const arrayOfStats = Object.entries(stats)\n     return arrayOfStats.map(stat => {\n       return (\n         <Segment horizontal >\n           <Grid.Column>\n            <Statistic size='small' label={stat[0]} value={stat[1]} />\n           </Grid.Column>\n         </Segment>\n       )\n     })\n   }\n\n  render(){\n    const url = `http://localhost:3001/subscribe/${this.props.slug}`//FOR COMPYING TO CLIPBOARD\n    return (\n      <div id=\"fanbase-stats\">\n        <Grid centered divided inverted columns='equal'>\n          <Grid.Column>\n            <TopCities/>\n          </Grid.Column>\n          <Grid.Column width={4} id=\"fanbase-stats-middle-column\">\n            <div id=\"user-subscription-copy\">\n              <Header inverted as='h2' content=\"My Subscription Page\" textAlign='center'/>\n                <Button\n                  size=\"massive\"\n                  animated='fade'\n                  icon\n                  labelPosition='right'\n                  id=\"copy-url-btn\"\n                  basic\n                  inverted\n                  size=\"large\"\n                  type='button'\n                  data-clipboard-text={ url }\n                  data-clipboard-action=\"copy\"\n                  onClick={() => this.copySubscriptionLink}\n                >\n                  <Button.Content visible>{`http://localhost:3001/subscribe/${this.props.slug}`}</Button.Content>\n                  <Button.Content hidden>Click to copy...</Button.Content>\n                <Icon name='copy'/>\n                </Button>\n            </div>\n            <GeneralStats/>\n          </Grid.Column>\n          <Grid.Column>\n            <TopStates/>\n          </Grid.Column>\n        </Grid>\n      </div>\n\n\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stats: state.sessionsReducer.currentUser.fanbase,\n    slug: state.sessionsReducer.currentUser.subscriptionProps.slug\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FanbaseStats)\n"]},"metadata":{},"sourceType":"module"}