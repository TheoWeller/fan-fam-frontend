{"ast":null,"code":"var _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts/BlastContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Button, Segment } from 'semantic-ui-react';\nimport { getBlasts } from '../../../actions/blastActions';\nimport BlastCard from './BlastCard';\n\nclass BlastContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      blasts: []\n    };\n\n    this.renderBlastCards = blasts => {\n      return blasts.map(blast => {\n        return React.createElement(BlastCard, {\n          blast: blast,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.conditionallyRenderBlastCards = () => {\n      return this.state.blasts ? this.renderBlastCards(this.state.blasts) : null;\n    };\n  }\n\n  componentDidMount() {\n    this.props.getBlasts(this.props.token, \"index\").then(data => {\n      this.setState({\n        blasts: data.blasts\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"blast-card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"yellow\",\n      basic: true,\n      size: \"massive\",\n      attached: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"DRAFT TEXT BLAST\"), React.createElement(Segment, {\n      attached: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      centered: true,\n      itemsPerRow: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.conditionallyRenderBlastCards())), React.createElement(Button, {\n      color: \"yellow\",\n      basic: true,\n      size: \"massive\",\n      attached: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"DRAFT TEXT BLAST\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getBlasts: (token, route) => dispatch(getBlasts(token, route))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.sessionsReducer.currentUser.token\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlastContainer);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts/BlastContainer.js"],"names":["React","Component","connect","Card","Button","Segment","getBlasts","BlastCard","BlastContainer","state","blasts","renderBlastCards","map","blast","conditionallyRenderBlastCards","componentDidMount","props","token","then","data","setState","render","mapDispatchToProps","dispatch","route","mapStateToProps","sessionsReducer","currentUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,OAAtB,QAAoC,mBAApC;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCQ,KADqC,GAC7B;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAD6B;;AAAA,SAUrCC,gBAVqC,GAUjBD,MAAD,IAAY;AAC7B,aAAOA,MAAM,CAACE,GAAP,CAAWC,KAAK,IAAI;AACzB,eAAO,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KAdoC;;AAAA,SAgBrCC,6BAhBqC,GAgBL,MAAM;AACpC,aAAO,KAAKL,KAAL,CAAWC,MAAX,GAAoB,KAAKC,gBAAL,CAAsB,KAAKF,KAAL,CAAWC,MAAjC,CAApB,GAA+D,IAAtE;AACD,KAlBoC;AAAA;;AAGrCK,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWV,SAAX,CAAqB,KAAKU,KAAL,CAAWC,KAAhC,EAAuC,OAAvC,EACCC,IADD,CACMC,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAe;AAAEV,QAAAA,MAAM,EAAES,IAAI,CAACT;AAAf,OAAf;AACD,KAHD;AAID;;AAaDW,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,EAAE,EAAC,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,MAA5B;AAA6B,MAAA,IAAI,EAAC,SAAlC;AAA4C,MAAA,QAAQ,EAAC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEI,oBAAC,OAAD;AAAS,MAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAqB,MAAA,WAAW,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,6BAAL,EADH,CADF,CAFJ,EAOE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,MAA5B;AAA6B,MAAA,IAAI,EAAC,SAAlC;AAA4C,MAAA,QAAQ,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,CADF;AAWD;;AAjCoC;;AAoCvC,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLjB,IAAAA,SAAS,EAAE,CAACW,KAAD,EAAQO,KAAR,KAAkBD,QAAQ,CAACjB,SAAS,CAACW,KAAD,EAAQO,KAAR,CAAV;AADhC,GAAP;AAGD,CAJD;;AAMA,MAAMC,eAAe,GAAIhB,KAAD,IAAW;AACjC,SAAO;AACLQ,IAAAA,KAAK,EAAER,KAAK,CAACiB,eAAN,CAAsBC,WAAtB,CAAkCV;AADpC,GAAP;AAGD,CAJD;;AAMA,eAAef,OAAO,CAACuB,eAAD,EAAkBH,kBAAlB,CAAP,CAA6Cd,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Card, Button, Segment} from 'semantic-ui-react'\nimport { getBlasts } from '../../../actions/blastActions'\nimport BlastCard from './BlastCard'\n\nclass BlastContainer extends Component {\n  state = { blasts: [] }\n\n  componentDidMount(){\n    this.props.getBlasts(this.props.token, \"index\")\n    .then(data => {\n      this.setState( { blasts: data.blasts } )\n    })\n  }\n\n  renderBlastCards = (blasts) => {\n    return blasts.map(blast => {\n      return <BlastCard blast={blast}/>\n    })\n  }\n\n  conditionallyRenderBlastCards = () => {\n    return this.state.blasts ? this.renderBlastCards(this.state.blasts) : null\n  }\n\n\n  render(){\n    return (\n      <div id=\"blast-card-container\">\n        <Button color='yellow' basic size='massive' attached='top'>DRAFT TEXT BLAST</Button>\n          <Segment attached>\n            <Card.Group centered itemsPerRow={1}>\n              {this.conditionallyRenderBlastCards()}\n            </Card.Group>\n          </Segment>\n        <Button color='yellow' basic size='massive' attached='bottom'>DRAFT TEXT BLAST</Button>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getBlasts: (token, route) => dispatch(getBlasts(token, route))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.sessionsReducer.currentUser.token\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlastContainer)\n"]},"metadata":{},"sourceType":"module"}