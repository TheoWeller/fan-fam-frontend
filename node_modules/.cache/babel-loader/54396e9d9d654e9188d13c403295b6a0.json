{"ast":null,"code":"/****************************************************************\nFETCH\n****************************************************************/\nexport const postToBlastCreate = (blastContent, route) => {\n  return dispatch => {\n    debugger;\n    dispatch({\n      type: \"BLAST_PENDING\"\n    });\n    return fetch(\"http://localhost:3000/api/v1/blast/\".concat(route), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(blastContent)\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        dispatch({\n          type: \"BLAST_ERROR\",\n          payload: data\n        });\n      } else {\n        dispatch({\n          type: \"BLAST_SUCCESS\",\n          payload: data\n        });\n      }\n\n      return data;\n    }).catch(error => {\n      return error;\n    });\n  };\n};\nexport const getBlasts = (token, route) => {\n  return dispatch => {\n    dispatch({\n      type: \"BLAST_PENDING\"\n    });\n    return fetch(\"http://localhost:3000/api/v1/blast/\".concat(route), {\n      headers: {\n        Authenticate: token,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      return data;\n    }).catch(error => {\n      return error;\n    });\n  };\n};","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/actions/blastActions.js"],"names":["postToBlastCreate","blastContent","route","dispatch","type","fetch","method","headers","body","JSON","stringify","then","response","json","data","error","payload","catch","getBlasts","token","Authenticate"],"mappings":"AACA;;;AAGA,OAAO,MAAMA,iBAAiB,GAAG,CAACC,YAAD,EAAeC,KAAf,KAAyB;AACxD,SAAQC,QAAD,IAAc;AACnB;AACEA,IAAAA,QAAQ,CAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAF,CAAR;AACA,WAAOC,KAAK,8CAAuCH,KAAvC,GAAgD;AAC1DI,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAFiD;AAM1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,YAAf;AANoD,KAAhD,CAAL,CAQNU,IARM,CAQDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARX,EASJF,IATI,CASCG,IAAI,IAAI;AACd,UAAIA,IAAI,CAACC,KAAT,EAAe;AACbZ,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAE,aAAR;AAAuBY,UAAAA,OAAO,EAAEF;AAAhC,SAAD,CAAR;AACD,OAFD,MAEO;AACLX,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBY,UAAAA,OAAO,EAAEF;AAAlC,SAAD,CAAR;AACD;;AACD,aAAOA,IAAP;AACD,KAhBM,EAkBRG,KAlBQ,CAkBFF,KAAK,IAAI;AACd,aAAOA,KAAP;AACD,KApBQ,CAAP;AAqBH,GAxBD;AAyBD,CA1BM;AA4BP,OAAO,MAAMG,SAAS,GAAG,CAACC,KAAD,EAAQjB,KAAR,KAAkB;AACzC,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAF,CAAR;AACA,WAAOC,KAAK,8CAAuCH,KAAvC,GAAgD;AAC1DK,MAAAA,OAAO,EAAE;AACPa,QAAAA,YAAY,EAAED,KADP;AAEP,kBAAU,kBAFH;AAGP,wBAAgB;AAHT;AADiD,KAAhD,CAAL,CAONR,IAPM,CAODC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPX,EAQJF,IARI,CAQCG,IAAI,IAAI;AACd,aAAOA,IAAP;AACD,KAVM,EAYRG,KAZQ,CAYFF,KAAK,IAAI;AACd,aAAOA,KAAP;AACD,KAdQ,CAAP;AAeH,GAjBD;AAkBD,CAnBM","sourcesContent":["\n/****************************************************************\nFETCH\n****************************************************************/\nexport const postToBlastCreate = (blastContent, route) => {\n  return (dispatch) => {\n    debugger\n      dispatch( { type: \"BLAST_PENDING\" } );\n      return fetch(`http://localhost:3000/api/v1/blast/${route}`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(blastContent)\n      })\n      .then(response => response.json())\n        .then(data => {\n        if (data.error){\n          dispatch({ type: \"BLAST_ERROR\", payload: data })\n        } else {\n          dispatch({ type: \"BLAST_SUCCESS\", payload: data })\n        }\n        return data\n      }\n    )\n    .catch(error => {\n      return error;\n    })\n  }\n}\n\nexport const getBlasts = (token, route) => {\n  return (dispatch) => {\n      dispatch( { type: \"BLAST_PENDING\" } );\n      return fetch(`http://localhost:3000/api/v1/blast/${route}`, {\n        headers: {\n          Authenticate: token,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => response.json())\n        .then(data => {\n        return data\n      }\n    )\n    .catch(error => {\n      return error;\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}