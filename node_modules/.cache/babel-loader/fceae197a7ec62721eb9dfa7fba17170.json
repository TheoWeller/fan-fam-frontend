{"ast":null,"code":"var _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Map.js\";\nimport React, { Component } from 'react';\nimport population from './population.csv';\nimport * as d3 from \"d3\";\n\nclass Map extends Component {\n  //   d3.csv('./population.csv', function(err, data) {\n  //\n  //   var config = {\"color1\":\"#d3e5ff\",\"color2\":\"#08306B\",\"stateDataColumn\":\"state_or_territory\",\"valueDataColumn\":\"population_estimate_for_july_1_2013_number\"}\n  //\n  //   var WIDTH = 800, HEIGHT = 500;\n  //\n  //   var COLOR_COUNTS = 9;\n  //\n  //   var SCALE = 0.7;\n  //\n  //   function Interpolate(start, end, steps, count) {\n  //       var s = start,\n  //           e = end,\n  //           final = s + (((e - s) / steps) * count);\n  //       return Math.floor(final);\n  //   }\n  //\n  //   function Color(_r, _g, _b) {\n  //       var r, g, b;\n  //       var setColors = function(_r, _g, _b) {\n  //           r = _r;\n  //           g = _g;\n  //           b = _b;\n  //       };\n  //\n  //       setColors(_r, _g, _b);\n  //       this.getColors = function() {\n  //           var colors = {\n  //               r: r,\n  //               g: g,\n  //               b: b\n  //           };\n  //           return colors;\n  //       };\n  //   }\n  //\n  //   function hexToRgb(hex) {\n  //       var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  //       return result ? {\n  //           r: parseInt(result[1], 16),\n  //           g: parseInt(result[2], 16),\n  //           b: parseInt(result[3], 16)\n  //       } : null;\n  //   }\n  //\n  //   function valueFormat(d) {\n  //     if (d > 1000000000) {\n  //       return Math.round(d / 1000000000 * 10) / 10 + \"B\";\n  //     } else if (d > 1000000) {\n  //       return Math.round(d / 1000000 * 10) / 10 + \"M\";\n  //     } else if (d > 1000) {\n  //       return Math.round(d / 1000 * 10) / 10 + \"K\";\n  //     } else {\n  //       return d;\n  //     }\n  //   }\n  //\n  //   var COLOR_FIRST = config.color1, COLOR_LAST = config.color2;\n  //\n  //   var rgb = hexToRgb(COLOR_FIRST);\n  //\n  //   var COLOR_START = new Color(rgb.r, rgb.g, rgb.b);\n  //\n  //   rgb = hexToRgb(COLOR_LAST);\n  //   var COLOR_END = new Color(rgb.r, rgb.g, rgb.b);\n  //\n  //   var MAP_STATE = config.stateDataColumn;\n  //   var MAP_VALUE = config.valueDataColumn;\n  //\n  //   var width = WIDTH,\n  //       height = HEIGHT;\n  //\n  //   var valueById = d3.map();\n  //\n  //   var startColors = COLOR_START.getColors(),\n  //       endColors = COLOR_END.getColors();\n  //\n  //   var colors = [];\n  //\n  //   for (var i = 0; i < COLOR_COUNTS; i++) {\n  //     var r = Interpolate(startColors.r, endColors.r, COLOR_COUNTS, i);\n  //     var g = Interpolate(startColors.g, endColors.g, COLOR_COUNTS, i);\n  //     var b = Interpolate(startColors.b, endColors.b, COLOR_COUNTS, i);\n  //     colors.push(new Color(r, g, b));\n  //   }\n  //\n  //   var quantize = d3.scale.quantize()\n  //       .domain([0, 1.0])\n  //       .range(d3.range(COLOR_COUNTS).map(function(i) { return i }));\n  //\n  //   var path = d3.geo.path();\n  //\n  //   var svg = d3.select(\"#canvas-svg\").append(\"svg\")\n  //       .attr(\"width\", width)\n  //       .attr(\"height\", height);\n  //\n  //   d3.tsv(\"https://s3-us-west-2.amazonaws.com/vida-public/geo/us-state-names.tsv\", function(error, names) {\n  //\n  //   name_id_map = {};\n  //   id_name_map = {};\n  //\n  //   for (var i = 0; i < names.length; i++) {\n  //     name_id_map[names[i].name] = names[i].id;\n  //     id_name_map[names[i].id] = names[i].name;\n  //   }\n  //\n  //   data.forEach(function(d) {\n  //     var id = name_id_map[d[MAP_STATE]];\n  //     valueById.set(id, +d[MAP_VALUE]);\n  //   });\n  //\n  //   quantize.domain([d3.min(data, function(d){ return +d[MAP_VALUE] }),\n  //     d3.max(data, function(d){ return +d[MAP_VALUE] })]);\n  //\n  //   d3.json(\"https://s3-us-west-2.amazonaws.com/vida-public/geo/us.json\", function(error, us) {\n  //     svg.append(\"g\")\n  //         .attr(\"class\", \"states-choropleth\")\n  //       .selectAll(\"path\")\n  //         .data(topojson.feature(us, us.objects.states).features)\n  //       .enter().append(\"path\")\n  //         .attr(\"transform\", \"scale(\" + SCALE + \")\")\n  //         .style(\"fill\", function(d) {\n  //           if (valueById.get(d.id)) {\n  //             var i = quantize(valueById.get(d.id));\n  //             var color = colors[i].getColors();\n  //             return \"rgb(\" + color.r + \",\" + color.g +\n  //                 \",\" + color.b + \")\";\n  //           } else {\n  //             return \"\";\n  //           }\n  //         })\n  //         .attr(\"d\", path)\n  //         .on(\"mousemove\", function(d) {\n  //             var html = \"\";\n  //\n  //             html += \"<div class=\\\"tooltip_kv\\\">\";\n  //             html += \"<span class=\\\"tooltip_key\\\">\";\n  //             html += id_name_map[d.id];\n  //             html += \"</span>\";\n  //             html += \"<span class=\\\"tooltip_value\\\">\";\n  //             html += (valueById.get(d.id) ? valueFormat(valueById.get(d.id)) : \"\");\n  //             html += \"\";\n  //             html += \"</span>\";\n  //             html += \"</div>\";\n  //\n  //             $(\"#tooltip-container\").html(html);\n  //             $(this).attr(\"fill-opacity\", \"0.8\");\n  //             $(\"#tooltip-container\").show();\n  //\n  //             var coordinates = d3.mouse(this);\n  //\n  //             var map_width = $('.states-choropleth')[0].getBoundingClientRect().width;\n  //\n  //             if (d3.event.layerX < map_width / 2) {\n  //               d3.select(\"#tooltip-container\")\n  //                 .style(\"top\", (d3.event.layerY + 15) + \"px\")\n  //                 .style(\"left\", (d3.event.layerX + 15) + \"px\");\n  //             } else {\n  //               var tooltip_width = $(\"#tooltip-container\").width();\n  //               d3.select(\"#tooltip-container\")\n  //                 .style(\"top\", (d3.event.layerY + 15) + \"px\")\n  //                 .style(\"left\", (d3.event.layerX - tooltip_width - 30) + \"px\");\n  //             }\n  //         })\n  //         .on(\"mouseout\", function() {\n  //                 $(this).attr(\"fill-opacity\", \"1.0\");\n  //                 $(\"#tooltip-container\").hide();\n  //             });\n  //\n  //     svg.append(\"path\")\n  //         .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n  //         .attr(\"class\", \"states\")\n  //         .attr(\"transform\", \"scale(\" + SCALE + \")\")\n  //         .attr(\"d\", path);\n  //   });\n  //\n  //   });\n  // });\n  render() {\n    console.log(population);\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \" Map \");\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Map.js"],"names":["React","Component","population","d3","Map","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAEA,MAAMC,GAAN,SAAkBH,SAAleADF;AAGD;;AAzL0B;;AA2L7B,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport population from './population.csv'\nimport * as d3 from \"d3\";\n\nclass Map extends Component  {\n//   d3.csv('./population.csv', function(err, data) {\n//\n//   var config = {\"color1\":\"#d3e5ff\",\"color2\":\"#08306B\",\"stateDataColumn\":\"state_or_territory\",\"valueDataColumn\":\"population_estimate_for_july_1_2013_number\"}\n//\n//   var WIDTH = 800, HEIGHT = 500;\n//\n//   var COLOR_COUNTS = 9;\n//\n//   var SCALE = 0.7;\n//\n//   function Interpolate(start, end, steps, count) {\n//       var s = start,\n//           e = end,\n//           final = s + (((e - s) / steps) * count);\n//       return Math.floor(final);\n//   }\n//\n//   function Color(_r, _g, _b) {\n//       var r, g, b;\n//       var setColors = function(_r, _g, _b) {\n//           r = _r;\n//           g = _g;\n//           b = _b;\n//       };\n//\n//       setColors(_r, _g, _b);\n//       this.getColors = function() {\n//           var colors = {\n//               r: r,\n//               g: g,\n//               b: b\n//           };\n//           return colors;\n//       };\n//   }\n//\n//   function hexToRgb(hex) {\n//       var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n//       return result ? {\n//           r: parseInt(result[1], 16),\n//           g: parseInt(result[2], 16),\n//           b: parseInt(result[3], 16)\n//       } : null;\n//   }\n//\n//   function valueFormat(d) {\n//     if (d > 1000000000) {\n//       return Math.round(d / 1000000000 * 10) / 10 + \"B\";\n//     } else if (d > 1000000) {\n//       return Math.round(d / 1000000 * 10) / 10 + \"M\";\n//     } else if (d > 1000) {\n//       return Math.round(d / 1000 * 10) / 10 + \"K\";\n//     } else {\n//       return d;\n//     }\n//   }\n//\n//   var COLOR_FIRST = config.color1, COLOR_LAST = config.color2;\n//\n//   var rgb = hexToRgb(COLOR_FIRST);\n//\n//   var COLOR_START = new Color(rgb.r, rgb.g, rgb.b);\n//\n//   rgb = hexToRgb(COLOR_LAST);\n//   var COLOR_END = new Color(rgb.r, rgb.g, rgb.b);\n//\n//   var MAP_STATE = config.stateDataColumn;\n//   var MAP_VALUE = config.valueDataColumn;\n//\n//   var width = WIDTH,\n//       height = HEIGHT;\n//\n//   var valueById = d3.map();\n//\n//   var startColors = COLOR_START.getColors(),\n//       endColors = COLOR_END.getColors();\n//\n//   var colors = [];\n//\n//   for (var i = 0; i < COLOR_COUNTS; i++) {\n//     var r = Interpolate(startColors.r, endColors.r, COLOR_COUNTS, i);\n//     var g = Interpolate(startColors.g, endColors.g, COLOR_COUNTS, i);\n//     var b = Interpolate(startColors.b, endColors.b, COLOR_COUNTS, i);\n//     colors.push(new Color(r, g, b));\n//   }\n//\n//   var quantize = d3.scale.quantize()\n//       .domain([0, 1.0])\n//       .range(d3.range(COLOR_COUNTS).map(function(i) { return i }));\n//\n//   var path = d3.geo.path();\n//\n//   var svg = d3.select(\"#canvas-svg\").append(\"svg\")\n//       .attr(\"width\", width)\n//       .attr(\"height\", height);\n//\n//   d3.tsv(\"https://s3-us-west-2.amazonaws.com/vida-public/geo/us-state-names.tsv\", function(error, names) {\n//\n//   name_id_map = {};\n//   id_name_map = {};\n//\n//   for (var i = 0; i < names.length; i++) {\n//     name_id_map[names[i].name] = names[i].id;\n//     id_name_map[names[i].id] = names[i].name;\n//   }\n//\n//   data.forEach(function(d) {\n//     var id = name_id_map[d[MAP_STATE]];\n//     valueById.set(id, +d[MAP_VALUE]);\n//   });\n//\n//   quantize.domain([d3.min(data, function(d){ return +d[MAP_VALUE] }),\n//     d3.max(data, function(d){ return +d[MAP_VALUE] })]);\n//\n//   d3.json(\"https://s3-us-west-2.amazonaws.com/vida-public/geo/us.json\", function(error, us) {\n//     svg.append(\"g\")\n//         .attr(\"class\", \"states-choropleth\")\n//       .selectAll(\"path\")\n//         .data(topojson.feature(us, us.objects.states).features)\n//       .enter().append(\"path\")\n//         .attr(\"transform\", \"scale(\" + SCALE + \")\")\n//         .style(\"fill\", function(d) {\n//           if (valueById.get(d.id)) {\n//             var i = quantize(valueById.get(d.id));\n//             var color = colors[i].getColors();\n//             return \"rgb(\" + color.r + \",\" + color.g +\n//                 \",\" + color.b + \")\";\n//           } else {\n//             return \"\";\n//           }\n//         })\n//         .attr(\"d\", path)\n//         .on(\"mousemove\", function(d) {\n//             var html = \"\";\n//\n//             html += \"<div class=\\\"tooltip_kv\\\">\";\n//             html += \"<span class=\\\"tooltip_key\\\">\";\n//             html += id_name_map[d.id];\n//             html += \"</span>\";\n//             html += \"<span class=\\\"tooltip_value\\\">\";\n//             html += (valueById.get(d.id) ? valueFormat(valueById.get(d.id)) : \"\");\n//             html += \"\";\n//             html += \"</span>\";\n//             html += \"</div>\";\n//\n//             $(\"#tooltip-container\").html(html);\n//             $(this).attr(\"fill-opacity\", \"0.8\");\n//             $(\"#tooltip-container\").show();\n//\n//             var coordinates = d3.mouse(this);\n//\n//             var map_width = $('.states-choropleth')[0].getBoundingClientRect().width;\n//\n//             if (d3.event.layerX < map_width / 2) {\n//               d3.select(\"#tooltip-container\")\n//                 .style(\"top\", (d3.event.layerY + 15) + \"px\")\n//                 .style(\"left\", (d3.event.layerX + 15) + \"px\");\n//             } else {\n//               var tooltip_width = $(\"#tooltip-container\").width();\n//               d3.select(\"#tooltip-container\")\n//                 .style(\"top\", (d3.event.layerY + 15) + \"px\")\n//                 .style(\"left\", (d3.event.layerX - tooltip_width - 30) + \"px\");\n//             }\n//         })\n//         .on(\"mouseout\", function() {\n//                 $(this).attr(\"fill-opacity\", \"1.0\");\n//                 $(\"#tooltip-container\").hide();\n//             });\n//\n//     svg.append(\"path\")\n//         .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))\n//         .attr(\"class\", \"states\")\n//         .attr(\"transform\", \"scale(\" + SCALE + \")\")\n//         .attr(\"d\", path);\n//   });\n//\n//   });\n// });\n  render(){\n\n    console.log(population);\n    return (\n      <h1> Map </h1>\n    )\n  }\n}\nexport default Map\n"]},"metadata":{},"sourceType":"module"}