{"ast":null,"code":"import _objectSpread from \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Checkbox, Form, Input } from 'semantic-ui-react';\nimport { LOGIN, login } from '../actions/sessionActions';\nimport { postToArtistCreate } from '../actions/sessionActions';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleFormChange = (fieldInputName, event) => {\n      switch (fieldInputName) {\n        case \"email\":\n          this.setState(_objectSpread({}, this.state, {\n            email: event.target.value\n          }));\n          break;\n\n        case \"password\":\n          this.setState(_objectSpread({}, this.state, {\n            password: event.target.value\n          }));\n          break;\n      }\n    };\n\n    this.dispatchLogin = () => {\n      this.props.dispatch(login(this.state.email, this.state.password));\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.dispatchLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Input, {\n      size: \"huge\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      name: \"email\",\n      onChange: event => this.handleFormChange(\"email\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Password\",\n      type: \"password\",\n      value: this.state.password,\n      name: \"password\",\n      onChange: event => this.handleFormChange(\"password\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  console.log(\"IS\", dispatch);\n  return {\n    fetchArtistCreate: newArtist => dispatch(postToArtistCreate(newArtist, \"login\"))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/Login.js"],"names":["React","Component","connect","Button","Checkbox","Form","Input","LOGIN","login","postToArtistCreate","Login","state","email","password","handleFormChange","fieldInputName","event","setState","target","value","dispatchLogin","props","dispatch","render","console","log","mapDispatchToProps","fetchArtistCreate","newArtist"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,KAAjC,QAA8C,mBAA9C;AACA,SAAQC,KAAR,EAAeC,KAAf,QAA2B,2BAA3B;AACA,SAASC,kBAAT,QAAmC,2BAAnC;;AAEA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE5BU,KAF4B,GAEpB;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,QAAQ,EAAE;AAAtB,KAFoB;;AAAA,SAI5BC,gBAJ4B,GAIT,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AAC5C,cAAOD,cAAP;AACE,aAAK,OAAL;AACA,eAAKE,QAAL,mBAAmB,KAAKN,KAAxB;AAA+BC,YAAAA,KAAK,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAAnD;AACA;;AACA,aAAK,UAAL;AACA,eAAKF,QAAL,mBAAmB,KAAKN,KAAxB;AAA+BE,YAAAA,QAAQ,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAAtD;AACA;AANF;AAQD,KAb2B;;AAAA,SAgB5BC,aAhB4B,GAgBZ,MAAM;AACpB,WAAKC,KAAL,CAAWC,QAAX,CAAoBd,KAAK,CAAC,KAAKG,KAAL,CAAWC,KAAZ,EAAmB,KAAKD,KAAL,CAAWE,QAA9B,CAAzB;AACD,KAlB2B;AAAA;;AAqB5BU,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKD,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,OAA/B;AAAuC,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,KAAzD;AAAgE,MAAA,IAAI,EAAC,OAArE;AAA6E,MAAA,QAAQ,EAAGI,KAAD,IAAW,KAAKF,gBAAL,CAAsB,OAAtB,EAA+BE,KAA/B,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,UAAnB;AAA8B,MAAA,IAAI,EAAC,UAAnC;AAA8C,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAAhE;AAA0E,MAAA,IAAI,EAAC,UAA/E;AAA2F,MAAA,QAAQ,EAAGG,KAAD,IAAW,KAAKF,gBAAL,CAAsB,UAAtB,EAAkCE,KAAlC,CAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAOE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,CADF;AAaD;;AApC2B;;AAuC9B,MAAMU,kBAAkB,GAAIJ,QAAD,IAAc;AACvCE,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBH,QAAlB;AACA,SAAO;AAACK,IAAAA,iBAAiB,EAAGC,SAAD,IAAcN,QAAQ,CAACb,kBAAkB,CAACmB,SAAD,EAAY,OAAZ,CAAnB;AAA1C,GAAP;AACD,CAHD;;AAKA,eAAe1B,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkChB,KAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Checkbox, Form, Input } from 'semantic-ui-react'\nimport {LOGIN, login} from '../actions/sessionActions'\nimport { postToArtistCreate } from '../actions/sessionActions'\n\nclass Login extends Component {\n\n  state = {email: \"\", password: \"\"}\n\n  handleFormChange = (fieldInputName, event) => {\n    switch(fieldInputName){\n      case \"email\":\n      this.setState( {...this.state, email: event.target.value} )\n      break;\n      case \"password\":\n      this.setState( {...this.state, password: event.target.value} )\n      break;\n    }\n  }\n\n\n  dispatchLogin = () => {\n    this.props.dispatch(login(this.state.email, this.state.password))\n  }\n\n\n  render (){\n    console.log(this.props);\n    return (\n      <div>\n        <Form onSubmit={this.dispatchLogin}>\n          <Form.Field>\n            <Input size='huge' placeholder='Email' value={this.state.email} name=\"email\" onChange={(event) => this.handleFormChange(\"email\", event)}/>\n          </Form.Field>\n          <Form.Field>\n            <Input placeholder='Password' type=\"password\" value={this.state.password} name=\"password\"  onChange={(event) => this.handleFormChange(\"password\", event)}/>\n          </Form.Field>\n          <Button type='submit'>Submit</Button>\n        </Form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  console.log(\"IS\", dispatch);\n  return {fetchArtistCreate: (newArtist)=> dispatch(postToArtistCreate(newArtist, \"login\"))}\n}\n\nexport default connect(null, mapDispatchToProps)(Login)\n"]},"metadata":{},"sourceType":"module"}