{"ast":null,"code":"import _objectSpread from \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/FanView/Subscribe.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Checkbox, Form, Input } from 'semantic-ui-react';\nimport { postToSubscriptionCreate } from '../../actions/subscriptionActions';\n\nclass Subscribe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      phone: \"\",\n      zip: \"\" // handleLogout = () => {\n      //   this.props.dispatch(this.props.dispatch(logout()))\n      // }\n\n    };\n\n    this.handleFormChange = (fieldInputName, event) => {\n      switch (fieldInputName) {\n        case \"phone\":\n          this.setState(_objectSpread({}, this.state, {\n            phone: event.target.value\n          }));\n          break;\n\n        case \"zip\":\n          this.setState(_objectSpread({}, this.state, {\n            zip: event.target.value\n          }));\n          break;\n      }\n    };\n\n    this.dispatchSubscription = () => {\n      this.props.postToSubscriptionCreate(this.state);\n    };\n  }\n\n  render() {\n    console.log(\"FANVIEW\", this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.dispatchSubscription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(Input, {\n      placeholder: \"(xxx)\",\n      maxLength: \"3\",\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"xxx\",\n      maxLength: \"3\",\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"xxxx\",\n      maxLength: \"4\",\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Zipcode\",\n      value: this.state.zip,\n      name: \"password\",\n      onChange: event => this.handleFormChange(\"zip\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Subscribe\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  console.log(\"SUB - DP\", dispatch);\n  return {\n    postToSubscriptionCreate: newArtist => dispatch(postToSubscriptionCreate(newArtist))\n  };\n};\n\nconst mapStateToProps = state => {\n  console.log(\"SUB - STATE\", state);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscribe);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/FanView/Subscribe.js"],"names":["React","Component","connect","Button","Checkbox","Form","Input","postToSubscriptionCreate","Subscribe","state","phone","zip","handleFormChange","fieldInputName","event","setState","target","value","dispatchSubscription","props","render","console","log","mapDispatchToProps","dispatch","newArtist","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Checkbox, Form, Input } from 'semantic-ui-react'\n\n\nimport { postToSubscriptionCreate } from '../../actions/subscriptionActions'\n\nclass Subscribe extends Component {\n  state={phone: \"\", zip: \"\"}\n\n  // handleLogout = () => {\n  //   this.props.dispatch(this.props.dispatch(logout()))\n  // }\n\n  handleFormChange = (fieldInputName, event) => {\n    switch(fieldInputName){\n      case \"phone\":\n      this.setState( {...this.state, phone: event.target.value} )\n      break;\n      case \"zip\":\n      this.setState( {...this.state, zip: event.target.value} )\n      break;\n    }\n  }\n\n  dispatchSubscription = () => {\n    this.props.postToSubscriptionCreate(this.state)\n  }\n\n  render (){\n    console.log(\"FANVIEW\", this.state);\n    return (\n      <div>\n        <Form onSubmit={this.dispatchSubscription}>\n        <Form.Group inline>\n          <Form.Field>\n            <label>Phone Number</label>\n            <Input placeholder='(xxx)' maxLength=\"3\" type=\"number\"/>\n          </Form.Field>\n          <Form.Field>\n            <Input placeholder='xxx' maxLength=\"3\" type=\"number\"/>\n          </Form.Field>\n          <Form.Field>\n            <Input placeholder='xxxx' maxLength=\"4\" type=\"number\"/>\n          </Form.Field>\n        </Form.Group>\n          <Form.Field>\n            <Input placeholder='Zipcode' value={this.state.zip} name=\"password\"  onChange={(event) => this.handleFormChange(\"zip\", event)}/>\n          </Form.Field>\n          <Button type='submit'>Subscribe</Button>\n        </Form>\n      </div>\n    )\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  console.log(\"SUB - DP\", dispatch);\n  return {postToSubscriptionCreate: (newArtist)=> dispatch(postToSubscriptionCreate(newArtist))}\n}\n\nconst mapStateToProps = (state) => {\n  console.log(\"SUB - STATE\", state);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscribe)\n"]},"metadata":{},"sourceType":"module"}