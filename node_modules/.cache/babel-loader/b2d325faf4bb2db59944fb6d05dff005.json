{"ast":null,"code":"import _objectSpread from \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Settings.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Input } from 'semantic-ui-react'; // import { Menu, Segment } from 'semantic-ui-react'\n\nimport { postToArtistCreate } from '../../actions/sessionActions';\n\nclass Settings extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      phone: \"\",\n      newPassword: \"\"\n    };\n\n    this.handleFormChange = (fieldInputName, event) => {\n      switch (fieldInputName) {\n        case \"email\":\n          this.setState(_objectSpread({}, this.state, {\n            email: event.target.value\n          }));\n          break;\n\n        case \"username\":\n          this.setState(_objectSpread({}, this.state, {\n            username: event.target.value\n          }));\n          break;\n\n        case \"password\":\n          this.setState(_objectSpread({}, this.state, {\n            password: event.target.value\n          }));\n          break;\n\n        case \"new-password\":\n          this.setState(_objectSpread({}, this.state, {\n            newPassword: event.target.value\n          }));\n          break;\n\n        case \"phone\":\n          this.setState(_objectSpread({}, this.state, {\n            phone: event.target.value\n          }));\n          break;\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // this.props.update(newArtist)\n    };\n\n    this.userSettingsForm = () => {\n      // console.log(\"STATE\", this.state);\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Input, {\n        transparent: true,\n        icon: \"mail outline\",\n        iconPosition: \"left\",\n        size: \"huge\",\n        placeholder: \"Email\",\n        value: this.state.email,\n        name: \"email\",\n        onChange: event => this.handleFormChange(\"email\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Input, {\n        fluid: true,\n        transparent: true,\n        iconPosition: \"left\",\n        icon: \"user outline\",\n        size: \"huge\",\n        placeholder: \"Username\",\n        value: this.state.username,\n        name: \"username\",\n        onChange: event => this.handleFormChange(\"username\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Input, {\n        transparent: true,\n        iconPosition: \"left\",\n        icon: \"lock\",\n        size: \"huge\",\n        placeholder: \"Password\",\n        type: \"password\",\n        value: this.state.password,\n        name: \"password\",\n        onChange: event => this.handleFormChange(\"password\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Input, {\n        transparent: true,\n        iconPosition: \"left\",\n        icon: \"lock\",\n        size: \"huge\",\n        placeholder: \"New password\",\n        type: \"password\",\n        value: this.state.Newpassword,\n        name: \"password\",\n        onChange: event => this.handleFormChange(\"new-password\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Input, {\n        transparent: true,\n        iconPosition: \"left\",\n        icon: \"phone\",\n        size: \"huge\",\n        placeholder: \"Phone\",\n        value: this.state.phone,\n        name: \"phone\",\n        onChange: event => this.handleFormChange(\"phone\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Submit\"));\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/api/v1/artist/settings', {\n      headers: {\n        Authenticate: this.props.currentUserToken\n      }\n    }).then(r => r.json()).then(data => {\n      this.setState(_objectSpread({}, this.state, {\n        email: data.email,\n        phone: data.phone,\n        username: data.username\n      }));\n    });\n  }\n\n  render() {\n    return this.userSettingsForm();\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    update: newArtist => dispatch(postToArtistCreate(newArtist, \"update\")),\n    getArtistData: newArtist => dispatch(postToArtistCreate(newArtist, \"setttings\"))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUserToken: state.sessionsReducer.currentUser.token\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Settings.js"],"names":["React","Component","connect","Button","Form","Input","postToArtistCreate","Settings","state","email","username","password","phone","newPassword","handleFormChange","fieldInputName","event","setState","target","value","handleSubmit","preventDefault","userSettingsForm","Newpassword","componentDidMount","fetch","headers","Authenticate","props","currentUserToken","then","r","json","data","render","mapDispatchToProps","dispatch","update","newArtist","getArtistData","mapStateToProps","sessionsReducer","currentUser","token"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,mBAApC,C,CACA;;AACA,SAASC,kBAAT,QAAmC,8BAAnC;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BO,KAD+B,GACvB;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,QAAQ,EAAE,EAAtB;AAA0BC,MAAAA,QAAQ,EAAE,EAApC;AAAwCC,MAAAA,KAAK,EAAE,EAA/C;AAAmDC,MAAAA,WAAW,EAAE;AAAhE,KADuB;;AAAA,SAqB/BC,gBArB+B,GAqBZ,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AAC5C,cAAOD,cAAP;AACE,aAAK,OAAL;AACA,eAAKE,QAAL,mBAAmB,KAAKT,KAAxB;AAA+BC,YAAAA,KAAK,EAAEO,KAAK,CAACE,MAAN,CAAaC;AAAnD;AACA;;AACA,aAAK,UAAL;AACA,eAAKF,QAAL,mBAAmB,KAAKT,KAAxB;AAA+BE,YAAAA,QAAQ,EAAEM,KAAK,CAACE,MAAN,CAAaC;AAAtD;AACA;;AACA,aAAK,UAAL;AACA,eAAKF,QAAL,mBAAmB,KAAKT,KAAxB;AAA+BG,YAAAA,QAAQ,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAAtD;AACA;;AACA,aAAK,cAAL;AACA,eAAKF,QAAL,mBAAmB,KAAKT,KAAxB;AAA+BK,YAAAA,WAAW,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAAzD;AACA;;AACA,aAAK,OAAL;AACA,eAAKF,QAAL,mBAAmB,KAAKT,KAAxB;AAA+BI,YAAAA,KAAK,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAAnD;AACA;AAfF;AAiBD,KAvC8B;;AAAA,SA0C/BC,YA1C+B,GA0CfJ,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACK,cAAN,GADwB,CAExB;AACD,KA7C8B;;AAAA,SA+C/BC,gBA/C+B,GA+CZ,MAAM;AACvB;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKF,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,WAAW,MAAlB;AACA,QAAA,IAAI,EAAC,cADL;AAEA,QAAA,YAAY,EAAC,MAFb;AAGA,QAAA,IAAI,EAAC,MAHL;AAIA,QAAA,WAAW,EAAC,OAJZ;AAKA,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,KALlB;AAMA,QAAA,IAAI,EAAC,OANL;AAOA,QAAA,QAAQ,EAAGO,KAAD,IAAW,KAAKF,gBAAL,CAAsB,OAAtB,EAA+BE,KAA/B,CAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADE,EAYF,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AACA,QAAA,WAAW,MADX;AAEA,QAAA,YAAY,EAAC,MAFb;AAGA,QAAA,IAAI,EAAC,cAHL;AAIA,QAAA,IAAI,EAAC,MAJL;AAKA,QAAA,WAAW,EAAC,UALZ;AAMA,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,QANlB;AAOA,QAAA,IAAI,EAAC,UAPL;AAQA,QAAA,QAAQ,EAAGM,KAAD,IAAW,KAAKF,gBAAL,CAAsB,UAAtB,EAAkCE,KAAlC,CARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAZE,EAwBF,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,WAAW,MAAlB;AACA,QAAA,YAAY,EAAC,MADb;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,IAAI,EAAC,MAHL;AAIA,QAAA,WAAW,EAAC,UAJZ;AAKA,QAAA,IAAI,EAAC,UALL;AAMA,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWG,QANlB;AAOA,QAAA,IAAI,EAAC,UAPL;AAQA,QAAA,QAAQ,EAAGK,KAAD,IAAW,KAAKF,gBAAL,CAAsB,UAAtB,EAAkCE,KAAlC,CARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAxBE,EAoCF,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,WAAW,MAAlB;AACA,QAAA,YAAY,EAAC,MADb;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,IAAI,EAAC,MAHL;AAIA,QAAA,WAAW,EAAC,cAJZ;AAKA,QAAA,IAAI,EAAC,UALL;AAMA,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWe,WANlB;AAOA,QAAA,IAAI,EAAC,UAPL;AAQA,QAAA,QAAQ,EAAGP,KAAD,IAAW,KAAKF,gBAAL,CAAsB,cAAtB,EAAsCE,KAAtC,CARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CApCE,EAgDF,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,WAAW,MAAlB;AACA,QAAA,YAAY,EAAC,MADb;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,IAAI,EAAC,MAHL;AAIA,QAAA,WAAW,EAAC,OAJZ;AAKA,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWI,KALlB;AAMA,QAAA,IAAI,EAAC,OANL;AAOA,QAAA,QAAQ,EAAGI,KAAD,IAAW,KAAKF,gBAAL,CAAsB,OAAtB,EAA+BE,KAA/B,CAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAhDE,EA2DF,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3DE,CADF;AA+DD,KAhH8B;AAAA;;AAG/BQ,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,8CAAD,EAAiD;AACpDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,YAAY,EAAE,KAAKC,KAAL,CAAWC;AADlB;AAD2C,KAAjD,CAAL,CAKCC,IALD,CAKMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALX,EAMCF,IAND,CAMMG,IAAI,IAAI;AACZ,WAAKhB,QAAL,mBACK,KAAKT,KADV;AAEEC,QAAAA,KAAK,EAAEwB,IAAI,CAACxB,KAFd;AAGEG,QAAAA,KAAK,EAAEqB,IAAI,CAACrB,KAHd;AAIEF,QAAAA,QAAQ,EAAEuB,IAAI,CAACvB;AAJjB;AAMD,KAbD;AAcD;;AAgGDwB,EAAAA,MAAM,GAAE;AACN,WACE,KAAKZ,gBAAL,EADF;AAGD;;AAtH8B;;AAyHjC,MAAMa,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,MAAM,EAAGC,SAAD,IAAcF,QAAQ,CAAC9B,kBAAkB,CAACgC,SAAD,EAAY,QAAZ,CAAnB,CADzB;AAELC,IAAAA,aAAa,EAAGD,SAAD,IAAcF,QAAQ,CAAC9B,kBAAkB,CAACgC,SAAD,EAAY,WAAZ,CAAnB;AAFhC,GAAP;AAID,CALD;;AAOA,MAAME,eAAe,GAAIhC,KAAD,IAAW;AACjC,SAAO;AAACqB,IAAAA,gBAAgB,EAAErB,KAAK,CAACiC,eAAN,CAAsBC,WAAtB,CAAkCC;AAArD,GAAP;AACD,CAFD;;AAIA,eAAezC,OAAO,CAACsC,eAAD,EAAkBL,kBAAlB,CAAP,CAA6C5B,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Input } from 'semantic-ui-react'\n// import { Menu, Segment } from 'semantic-ui-react'\nimport { postToArtistCreate } from '../../actions/sessionActions'\n\nclass Settings extends Component {\n  state = {email: \"\", username: \"\", password: \"\", phone: \"\", newPassword: \"\"}\n\n  componentDidMount(){\n    fetch('http://localhost:3000/api/v1/artist/settings', {\n      headers: {\n        Authenticate: this.props.currentUserToken\n      }\n    })\n    .then(r => r.json())\n    .then(data => {\n      this.setState({\n        ...this.state,\n        email: data.email,\n        phone: data.phone,\n        username: data.username\n      })\n    })\n  }\n\n\n  handleFormChange = (fieldInputName, event) => {\n    switch(fieldInputName){\n      case \"email\":\n      this.setState( {...this.state, email: event.target.value} )\n      break;\n      case \"username\":\n      this.setState( {...this.state, username: event.target.value} )\n      break;\n      case \"password\":\n      this.setState( {...this.state, password: event.target.value} )\n      break;\n      case \"new-password\":\n      this.setState( {...this.state, newPassword: event.target.value} )\n      break;\n      case \"phone\":\n      this.setState( {...this.state, phone: event.target.value} )\n      break;\n    }\n  }\n\n  //TODO: Save title when module save buttton is clicked\n  handleSubmit = (event) => {\n    event.preventDefault()\n    // this.props.update(newArtist)\n  }\n\n  userSettingsForm = () => {\n    // console.log(\"STATE\", this.state);\n    return (\n      <Form onSubmit={this.handleSubmit}>\n    <Form.Field>\n      <Input transparent\n      icon='mail outline'\n      iconPosition='left'\n      size='huge'\n      placeholder='Email'\n      value={this.state.email}\n      name=\"email\"\n      onChange={(event) => this.handleFormChange(\"email\", event)}\n    />\n    </Form.Field>\n    <Form.Field>\n      <Input fluid\n      transparent\n      iconPosition='left'\n      icon='user outline'\n      size='huge'\n      placeholder='Username'\n      value={this.state.username}\n      name=\"username\"\n      onChange={(event) => this.handleFormChange(\"username\", event)}\n    />\n    </Form.Field>\n    <Form.Field>\n      <Input transparent\n      iconPosition='left'\n      icon='lock'\n      size='huge'\n      placeholder='Password'\n      type=\"password\"\n      value={this.state.password}\n      name=\"password\"\n      onChange={(event) => this.handleFormChange(\"password\", event)}\n    />\n    </Form.Field>\n    <Form.Field>\n      <Input transparent\n      iconPosition='left'\n      icon='lock'\n      size='huge'\n      placeholder='New password'\n      type=\"password\"\n      value={this.state.Newpassword}\n      name=\"password\"\n      onChange={(event) => this.handleFormChange(\"new-password\", event)}\n    />\n    </Form.Field>\n    <Form.Field>\n      <Input transparent\n      iconPosition='left'\n      icon='phone'\n      size='huge'\n      placeholder='Phone'\n      value={this.state.phone}\n      name=\"phone\"\n      onChange={(event) => this.handleFormChange(\"phone\", event)}\n    />\n    </Form.Field>\n    <Button type='submit'>Submit</Button>\n  </Form>\n    )\n  }\n\n  render(){\n    return (\n      this.userSettingsForm()\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    update: (newArtist)=> dispatch(postToArtistCreate(newArtist, \"update\")),\n    getArtistData: (newArtist)=> dispatch(postToArtistCreate(newArtist, \"setttings\"))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {currentUserToken: state.sessionsReducer.currentUser.token}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n"]},"metadata":{},"sourceType":"module"}