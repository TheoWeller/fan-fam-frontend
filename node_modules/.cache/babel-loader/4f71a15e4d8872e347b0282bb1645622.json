{"ast":null,"code":"var _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts/BlastContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from 'semantic-ui-react';\nimport { getBlasts } from '../../../actions/blastActions';\nimport BlastCard from './BlastCard';\n\nclass BlastContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      blasts: []\n    };\n\n    this.conditionallyRenderBlastCards = () => {\n      return this.props.blasts ? this.renderBlastCards(this.props.blasts) : React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \" No blasts yet. \");\n    };\n\n    this.renderBlastCards = blasts => {\n      return blasts.map(blast => {\n        return React.createElement(BlastCard, {\n          blast: blast,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  componentDidMount() {} // this.props.getBlasts(this.props.token, \"index\")\n  // .then(data => {\n  //   this.setState( { blasts: data.blasts } )\n  // })\n  //If there are blasts to render..\n\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"blast-card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      centered: true,\n      itemsPerRow: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.conditionallyRenderBlastCards()));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getBlasts: (token, route) => dispatch(getBlasts(token, route))\n  };\n};\n\nconst mapStateToProps = state => {\n  debugger;\n  return {\n    token: state.sessionsReducer.currentUser.token,\n    blasts: state.sessionsReducer.currentUser.blasts\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlastContainer);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts/BlastContainer.js"],"names":["React","Component","connect","Card","getBlasts","BlastCard","BlastContainer","state","blasts","conditionallyRenderBlastCards","props","renderBlastCards","map","blast","componentDidMount","render","mapDispatchToProps","dispatch","token","route","mapStateToProps","sessionsReducer","currentUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCM,KADqC,GAC7B;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAD6B;;AAAA,SAWrCC,6BAXqC,GAWL,MAAM;AACpC,aAAO,KAAKC,KAAL,CAAWF,MAAX,GAAoB,KAAKG,gBAAL,CAAsB,KAAKD,KAAL,CAAWF,MAAjC,CAApB,GAA+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAtE;AACD,KAboC;;AAAA,SAerCG,gBAfqC,GAejBH,MAAD,IAAY;AAC7B,aAAOA,MAAM,CAACI,GAAP,CAAWC,KAAK,IAAI;AACzB,eAAO,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KAnBoC;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAE,CAKlB,CALgB,CACf;AACA;AACA;AACA;AAGF;;;AAWAC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,EAAE,EAAC,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAqB,MAAA,WAAW,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,6BAAL,EADH,CADN,CADF;AAOD;;AA7BoC;;AAgCvC,MAAMO,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLb,IAAAA,SAAS,EAAE,CAACc,KAAD,EAAQC,KAAR,KAAkBF,QAAQ,CAACb,SAAS,CAACc,KAAD,EAAQC,KAAR,CAAV;AADhC,GAAP;AAGD,CAJD;;AAMA,MAAMC,eAAe,GAAIb,KAAD,IAAW;AACjC;AACA,SAAO;AACLW,IAAAA,KAAK,EAAEX,KAAK,CAACc,eAAN,CAAsBC,WAAtB,CAAkCJ,KADpC;AAELV,IAAAA,MAAM,EAAED,KAAK,CAACc,eAAN,CAAsBC,WAAtB,CAAkCd;AAFrC,GAAP;AAID,CAND;;AAQA,eAAeN,OAAO,CAACkB,eAAD,EAAkBJ,kBAAlB,CAAP,CAA6CV,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Card} from 'semantic-ui-react'\nimport { getBlasts } from '../../../actions/blastActions'\nimport BlastCard from './BlastCard'\n\nclass BlastContainer extends Component {\n  state = { blasts: [] }\n\n  componentDidMount(){\n    // this.props.getBlasts(this.props.token, \"index\")\n    // .then(data => {\n    //   this.setState( { blasts: data.blasts } )\n    // })\n  }\n\n  //If there are blasts to render..\n  conditionallyRenderBlastCards = () => {\n    return this.props.blasts ? this.renderBlastCards(this.props.blasts) : <h1> No blasts yet. </h1>\n  }\n\n  renderBlastCards = (blasts) => {\n    return blasts.map(blast => {\n      return <BlastCard blast={blast}/>\n    })\n  }\n\n  render(){\n    return (\n      <div id=\"blast-card-container\">\n            <Card.Group centered itemsPerRow={1}>\n              {this.conditionallyRenderBlastCards()}\n            </Card.Group>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getBlasts: (token, route) => dispatch(getBlasts(token, route))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  debugger\n  return {\n    token: state.sessionsReducer.currentUser.token,\n    blasts: state.sessionsReducer.currentUser.blasts\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlastContainer)\n"]},"metadata":{},"sourceType":"module"}