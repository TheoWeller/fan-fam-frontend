{"ast":null,"code":"import _objectSpread from \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { postToBlastCreate } from '../../actions/blastActions'; // import { Button, Checkbox, Form, Input } from 'semantic-ui-react'\n\nimport { Menu, Segment, TextArea, Form, Input, Button } from 'semantic-ui-react';\n\nclass Blasts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      content: \"\",\n      url: \"\"\n    };\n\n    this.handleSubmit = () => {\n      this.props.sendBlast({\n        content: this.state.content,\n        url: this.state.password\n      }).then(data => console.log(\"DATA INSIDE BLAST:\", data));\n    };\n\n    this.handleFormChange = (fieldInputName, event) => {\n      switch (fieldInputName) {\n        case \"content\":\n          this.setState(_objectSpread({}, this.state, {\n            content: event.target.value\n          }));\n          break;\n\n        case \"url\":\n          this.setState(_objectSpread({}, this.state, {\n            url: event.target.value\n          }));\n          break;\n      }\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      value: this.state.content,\n      id: \"blast-content\",\n      placeholder: \"Text blast content\",\n      onChange: event => this.handleFormChange(\"content\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Input, {\n      value: this.state.url,\n      placeholder: \"Text blast url\",\n      onChange: event => this.handleFormChange(\"url\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Send Blast\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  debugger;\n  return {\n    sendBlast: blastContent => dispatch(postToBlastCreate(blastContent))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Blasts);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts.js"],"names":["React","Component","Fragment","connect","postToBlastCreate","Menu","Segment","TextArea","Form","Input","Button","Blasts","state","content","url","handleSubmit","props","sendBlast","password","then","data","console","log","handleFormChange","fieldInputName","event","setState","target","value","render","mapDispatchToProps","dispatch","blastContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,4BAAlC,C,CACA;;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,EAAkCC,IAAlC,EAAwCC,KAAxC,EAA+CC,MAA/C,QAA6D,mBAA7D;;AAEA,MAAMC,MAAN,SAAqBV,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BW,KAD6B,GACrB;AAACC,MAAAA,OAAO,EAAE,EAAV;AAAcC,MAAAA,GAAG,EAAE;AAAnB,KADqB;;AAAA,SAG7BC,YAH6B,GAGd,MAAM;AACnB,WAAKC,KAAL,CAAWC,SAAX,CAAqB;AAACJ,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAArB;AAA8BC,QAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWM;AAA9C,OAArB,EACCC,IADD,CACMC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,IAAlC,CADd;AAED,KAN4B;;AAAA,SAQ7BG,gBAR6B,GAQV,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AAC5C,cAAOD,cAAP;AACE,aAAK,SAAL;AACE,eAAKE,QAAL,mBAAmB,KAAKd,KAAxB;AAA+BC,YAAAA,OAAO,EAAEY,KAAK,CAACE,MAAN,CAAaC;AAArD;AACF;;AACA,aAAK,KAAL;AACE,eAAKF,QAAL,mBAAmB,KAAKd,KAAxB;AAA+BE,YAAAA,GAAG,EAAEW,KAAK,CAACE,MAAN,CAAaC;AAAjD;AACF;AANF;AAQD,KAjB4B;AAAA;;AAmB7BC,EAAAA,MAAM,GAAE;AACNR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACA,WACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKG,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,OADpB;AAEE,MAAA,EAAE,EAAC,eAFL;AAGE,MAAA,WAAW,EAAC,oBAHd;AAIE,MAAA,QAAQ,EAAGY,KAAD,IAAW,KAAKF,gBAAL,CAAsB,SAAtB,EAAiCE,KAAjC,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,KAAD;AACA,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,GADlB;AAEA,MAAA,WAAW,EAAC,gBAFZ;AAGA,MAAA,QAAQ,EAAGW,KAAD,IAAW,KAAKF,gBAAL,CAAsB,KAAtB,EAA6BE,KAA7B,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAYE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,CADF;AAgBD;;AArC4B;;AAwC/B,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACvC;AACA,SAAO;AAACd,IAAAA,SAAS,EAAGe,YAAD,IAAiBD,QAAQ,CAAC3B,iBAAiB,CAAC4B,YAAD,CAAlB;AAArC,GAAP;AACD,CAHD;;AAKA,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCnB,MAAlC,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { postToBlastCreate } from '../../actions/blastActions'\n// import { Button, Checkbox, Form, Input } from 'semantic-ui-react'\nimport { Menu, Segment, TextArea, Form, Input, Button } from 'semantic-ui-react'\n\nclass Blasts extends Component {\n  state = {content: \"\", url: \"\"}\n\n  handleSubmit = () => {\n    this.props.sendBlast({content: this.state.content, url: this.state.password})\n    .then(data => console.log(\"DATA INSIDE BLAST:\", data))\n  }\n\n  handleFormChange = (fieldInputName, event) => {\n    switch(fieldInputName){\n      case \"content\":\n        this.setState( {...this.state, content: event.target.value} )\n      break;\n      case \"url\":\n        this.setState( {...this.state, url: event.target.value} )\n      break;\n    }\n  }\n\n  render(){\n    console.log(this.state);\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <TextArea\n          value={this.state.content}\n          id=\"blast-content\"\n          placeholder='Text blast content'\n          onChange={(event) => this.handleFormChange(\"content\", event)}\n        />\n        <Input\n        value={this.state.url}\n        placeholder='Text blast url'\n        onChange={(event) => this.handleFormChange(\"url\", event)}\n        />\n        <Button type='submit'>Send Blast</Button>\n      </Form>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  debugger\n  return {sendBlast: (blastContent)=> dispatch(postToBlastCreate(blastContent))}\n}\n\nexport default connect(null, mapDispatchToProps)(Blasts)\n"]},"metadata":{},"sourceType":"module"}