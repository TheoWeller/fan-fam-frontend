{"ast":null,"code":"import _objectSpread from \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { postToBlastCreate } from '../../actions/blastActions'; // import { Button, Checkbox, Form, Input } from 'semantic-ui-react'\n\nimport { Menu, Segment, TextArea, Form, Input, Button, Modal, Header } from 'semantic-ui-react';\n\nclass Blasts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      content: \"\",\n      url: \"\",\n      shortenedLink: \"\",\n      shortenedLinkId: \"\",\n      blastConfirmation: false\n    };\n\n    this.handleFormChange = (fieldInputName, event) => {\n      switch (fieldInputName) {\n        case \"content\":\n          this.setState(_objectSpread({}, this.state, {\n            content: event.target.value\n          }));\n          break;\n\n        case \"url\":\n          this.setState(_objectSpread({}, this.state, {\n            url: event.target.value\n          }));\n          break;\n      }\n    };\n\n    this.handleSubmit = () => {\n      console.log(\"LMAO\");\n      this.props.sendBlast(_objectSpread({}, this.state, {\n        id: this.props.currentUserId\n      }), \"create\").then(data => this.setState(_objectSpread({}, this.state, {\n        blastConfirmation: true\n      })));\n    };\n\n    this.handleShortLinkClick = () => {\n      this.props.shortenLink({\n        content: this.state.content,\n        url: this.state.url\n      }, \"shorten\").then(data => {\n        this.setState({\n          content: data.content,\n          url: data.url.replace(/^\\/|\\/$/g, ''),\n          shortenedLink: data.shortUrl,\n          shortenedLinkId: data.shortUrlId\n        });\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      value: this.state.content,\n      id: \"blast-content\",\n      placeholder: \"Text blast content\",\n      onChange: event => this.handleFormChange(\"content\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Input, {\n      value: this.state.url,\n      placeholder: \"Text blast url\",\n      onChange: event => this.handleFormChange(\"url\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"button\",\n      onClick: this.handleShortLinkClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Shorten Link\"), React.createElement(Input, {\n      action: {\n        color: 'teal',\n        labelPosition: 'right',\n        icon: 'copy',\n        content: 'Copy'\n      },\n      defaultValue: \"http://ww.short.url/c0opq\",\n      value: this.state.shortenedLink,\n      placeholder: \"Shortened url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Send Blast\")), React.createElement(Modal, {\n      open: this.state.blastConfirmation,\n      basic: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Header, {\n      textAlign: \"center\",\n      content: \"Send Blast?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendBlast: (blastContent, route) => dispatch(postToBlastCreate(blastContent, route)),\n    shortenLink: (blastContent, route) => dispatch(postToBlastCreate(blastContent, route))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUserId: state.sessionsReducer.currentUser.id\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Blasts);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts.js"],"names":["React","Component","Fragment","connect","postToBlastCreate","Menu","Segment","TextArea","Form","Input","Button","Modal","Header","Blasts","state","content","url","shortenedLink","shortenedLinkId","blastConfirmation","handleFormChange","fieldInputName","event","setState","target","value","handleSubmit","console","log","props","sendBlast","id","currentUserId","then","data","handleShortLinkClick","shortenLink","replace","shortUrl","shortUrlId","render","color","labelPosition","icon","mapDispatchToProps","dispatch","blastContent","route","mapStateToProps","sessionsReducer","currentUser"],"mappings":"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","sourcesContent":["import React, { Component, Fragment} from 'react';\nimport { connect } from 'react-redux';\nimport { postToBlastCreate } from '../../actions/blastActions'\n// import { Button, Checkbox, Form, Input } from 'semantic-ui-react'\nimport { Menu, Segment, TextArea, Form, Input, Button, Modal, Header } from 'semantic-ui-react'\n\nclass Blasts extends Component {\n  state = {content: \"\", url: \"\", shortenedLink: \"\", shortenedLinkId: \"\", blastConfirmation: false}\n\n\n  handleFormChange = (fieldInputName, event) => {\n    switch(fieldInputName){\n      case \"content\":\n        this.setState( {...this.state, content: event.target.value} )\n      break;\n      case \"url\":\n        this.setState( {...this.state, url: event.target.value} )\n      break;\n    }\n  }\n\n  handleSubmit = () => {\n    console.log(\"LMAO\");\n    this.props.sendBlast({\n      ...this.state,\n      id: this.props.currentUserId\n    }, \"create\")\n    .then(data => this.setState( { ...this.state, blastConfirmation: true } ))\n  }\n\n  handleShortLinkClick = () => {\n    this.props.shortenLink({\n      content: this.state.content,\n      url: this.state.url\n    }, \"shorten\")\n    .then(data => {\n      this.setState({\n        content: data.content,\n        url: data.url.replace(/^\\/|\\/$/g, ''),\n        shortenedLink: data.shortUrl,\n        shortenedLinkId: data.shortUrlId\n      })\n    })\n  }\n\n\n  render(){\n    console.log(this.state);\n    return (\n      <Fragment>\n        <Form onSubmit={this.handleSubmit}>\n          <TextArea\n            value={this.state.content}\n            id=\"blast-content\"\n            placeholder='Text blast content'\n            onChange={(event) => this.handleFormChange(\"content\", event)}\n          />\n          <Input\n          value={this.state.url}\n          placeholder='Text blast url'\n          onChange={(event) => this.handleFormChange(\"url\", event)}\n          />\n          <Button type=\"button\" onClick={this.handleShortLinkClick}>Shorten Link</Button>\n          <Input\n          action={{ color: 'teal', labelPosition: 'right', icon: 'copy', content: 'Copy' }}\n          defaultValue='http://ww.short.url/c0opq'\n          value={this.state.shortenedLink}\n          placeholder='Shortened url'\n          />\n          <br/>\n          <Button type='submit'>Send Blast</Button>\n        </Form>\n\n        <Modal open={this.state.blastConfirmation} basic size='small'>\n          <Header textAlign=\"center\" content='Send Blast?' />\n        </Modal>\n      </Fragment>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendBlast: (blastContent, route)=> dispatch(postToBlastCreate(blastContent, route)),\n    shortenLink: (blastContent, route)=> dispatch(postToBlastCreate(blastContent, route))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {currentUserId: state.sessionsReducer.currentUser.id}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Blasts)\n"]},"metadata":{},"sourceType":"module"}