{"ast":null,"code":"import _objectSpread from \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SUBSCRIPTION_SUCCESS, setSubscriptionSuccess, SUBSCRIPTION_FAILED, setSubscriptionFail } from '../actions/sessionActions';\nexport default ((state = {\n  processingSubscription: false,\n  error: false\n}, action) => {\n  switch (action.type) {\n    case \"SUBSCRIPTION_SUCCESS\":\n      console.log(\"SUB-SUCESS\", action.payload);\n      return _objectSpread({}, state, {\n        processingSubscription: false\n      });\n\n    case \"PENDING\":\n      return _objectSpread({}, state, {\n        processingSubscription: true\n      });\n\n    case \"ERROR\":\n      console.log(\"SUB-ERROR\", action.payload);\n      return _objectSpread({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/reducers/subscriptionReducer.js"],"names":["SUBSCRIPTION_SUCCESS","setSubscriptionSuccess","SUBSCRIPTION_FAILED","setSubscriptionFail","state","processingSubscription","error","action","type","console","log","payload"],"mappings":";AACA,SAAQA,oBAAR,EAA8BC,sBAA9B,EAAsDC,mBAAtD,EAA2EC,mBAA3E,QAAsG,2BAAtG;AAIA,gBAAe,CAACC,KAAK,GAAG;AAACC,EAAAA,sBAAsB,EAAE,KAAzB;AAAgCC,EAAAA,KAAK,EAAE;AAAvC,CAAT,EAAwDC,MAAxD,KAAmE;AAElF,UAAOA,MAAM,CAACC,IAAd;AAEE,SAAK,sBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,MAAM,CAACI,OAAjC;AACA,+BAAWP,KAAX;AAAkBC,QAAAA,sBAAsB,EAAE;AAA1C;;AACF,SAAK,SAAL;AACA,+BAAWD,KAAX;AAAkBC,QAAAA,sBAAsB,EAAE;AAA1C;;AACA,SAAK,OAAL;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,MAAM,CAACI,OAAhC;AACE,+BAAWP,KAAX;AAAkBE,QAAAA,KAAK,EAAE;AAAzB;;AACA;AACA,aAAOF,KAAP;AAXJ;AAaC,CAfD","sourcesContent":["\nimport {SUBSCRIPTION_SUCCESS, setSubscriptionSuccess, SUBSCRIPTION_FAILED, setSubscriptionFail } from '../actions/sessionActions'\n\n\n\nexport default (state = {processingSubscription: false, error: false}, action) => {\n\nswitch(action.type) {\n\n  case \"SUBSCRIPTION_SUCCESS\":\n    console.log(\"SUB-SUCESS\", action.payload);\n    return {...state, processingSubscription: false}\n  case \"PENDING\":\n  return {...state, processingSubscription: true}\n  case \"ERROR\":\n  console.log(\"SUB-ERROR\", action.payload);\n    return {...state, error: true}\n    default:\n    return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}