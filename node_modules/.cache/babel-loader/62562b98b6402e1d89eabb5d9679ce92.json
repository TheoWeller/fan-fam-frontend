{"ast":null,"code":"var _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts/BlastContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from 'semantic-ui-react';\nimport BlastCard from './BlastCard';\n\nclass BlastContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.conditionallyRenderBlastCards = () => {\n      if (this.props.blasts) {\n        this.renderBlastCards(this.props.blasts);\n      } else if (this.props.blasts.length === 0) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, \" No blasts yet.\");\n      }\n    };\n\n    this.renderBlastCards = blasts => {\n      return blasts.map(blast => {\n        return React.createElement(BlastCard, {\n          blast: blast,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  render() {\n    //TODO: list blasts by most recent--Filter by most successful?\n    return React.createElement(\"div\", {\n      id: \"blast-card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      centered: true,\n      itemsPerRow: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.conditionallyRenderBlastCards()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.sessionsReducer.currentUser.token,\n    blasts: state.sessionsReducer.currentUser.blasts\n  };\n};\n\nexport default connect(mapStateToProps)(BlastContainer);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/Blasts/BlastContainer.js"],"names":["React","Component","connect","Card","BlastCard","BlastContainer","conditionallyRenderBlastCards","props","blasts","renderBlastCards","length","map","blast","render","mapStateToProps","state","token","sessionsReducer","currentUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAErCK,6BAFqC,GAEL,MAAM;AACpC,UAAG,KAAKC,KAAL,CAAWC,MAAd,EAAqB;AACnB,aAAKC,gBAAL,CAAsB,KAAKF,KAAL,CAAWC,MAAjC;AACD,OAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,MAAX,CAAkBE,MAAlB,KAA6B,CAAjC,EAAoC;AACzC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD;AAEF,KAToC;;AAAA,SAWrCD,gBAXqC,GAWjBD,MAAD,IAAY;AAC7B,aAAOA,MAAM,CAACG,GAAP,CAAWC,KAAK,IAAI;AACzB,eAAO,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,CAAP;AAGD,KAfoC;AAAA;;AAiBrCC,EAAAA,MAAM,GAAE;AACN;AACA,WACE;AAAK,MAAA,EAAE,EAAC,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAqB,MAAA,WAAW,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,6BAAL,EADH,CADN,CADF;AAOD;;AA1BoC;;AA6BvC,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACE,eAAN,CAAsBC,WAAtB,CAAkCF,KADpC;AAELR,IAAAA,MAAM,EAAEO,KAAK,CAACE,eAAN,CAAsBC,WAAtB,CAAkCV;AAFrC,GAAP;AAID,CALD;;AAOA,eAAeN,OAAO,CAACY,eAAD,CAAP,CAAyBT,cAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Card} from 'semantic-ui-react'\nimport BlastCard from './BlastCard'\n\nclass BlastContainer extends Component {\n  //If there are blasts to render..\n  conditionallyRenderBlastCards = () => {\n    if(this.props.blasts){\n      this.renderBlastCards(this.props.blasts)\n    } else if (this.props.blasts.length === 0) {\n      return <h1> No blasts yet.</h1>\n    }\n\n  }\n\n  renderBlastCards = (blasts) => {\n    return blasts.map(blast => {\n      return <BlastCard blast={blast}/>\n    })\n  }\n\n  render(){\n    //TODO: list blasts by most recent--Filter by most successful?\n    return (\n      <div id=\"blast-card-container\">\n            <Card.Group centered itemsPerRow={1}>\n              {this.conditionallyRenderBlastCards()}\n            </Card.Group>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.sessionsReducer.currentUser.token,\n    blasts: state.sessionsReducer.currentUser.blasts\n  }\n}\n\nexport default connect(mapStateToProps)(BlastContainer)\n"]},"metadata":{},"sourceType":"module"}