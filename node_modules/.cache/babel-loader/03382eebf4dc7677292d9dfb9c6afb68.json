{"ast":null,"code":"export { SUBSCRIPTION_SUCCESS, setSubscriptionSuccess, SUBSCRIPTION_FAILED, setSubscriptionFail };\nconst SUBSCRIPTION_SUCCESS = \"SUBSCRIPTION_SUCCESS\";\nconst SUBSCRIPTION_FAILED = \"SUBSCRIPTION_FAILED\";\n\nconst setSubscriptionSuccess = payload => {\n  return {\n    type: SUBSCRIPTION_SUCCESS,\n    payload\n  };\n};\n\nconst setSubscriptionFail = payload => {\n  return {\n    type: SUBSCRIPTION_FAILED,\n    payload\n  };\n};\n/****************************************************************\nFETCHES\n****************************************************************/\n\n\nexport const postToSubscriptionCreate = credentials => {\n  return dispatch => {\n    dispatch({\n      type: \"LOADING\"\n    });\n    return fetch(\"http://localhost:3000/api/v1/subscribe\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        dispatch({\n          type: \"ERROR\",\n          payload: data\n        });\n      } else {\n        localStorage.setItem(\"token\", data.token);\n        dispatch({\n          type: SUBSCRIPTION_SUCCESS,\n          payload: data\n        });\n      }\n    }).catch(error => {\n      return error;\n    });\n  };\n};","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/actions/subscriptionActions.js"],"names":["SUBSCRIPTION_SUCCESS","setSubscriptionSuccess","SUBSCRIPTION_FAILED","setSubscriptionFail","payload","type","postToSubscriptionCreate","credentials","dispatch","fetch","method","headers","body","JSON","stringify","then","response","json","data","error","localStorage","setItem","token","catch"],"mappings":"AAAA,SAAQA,oBAAR,EAA8BC,sBAA9B,EAAsDC,mBAAtD,EAA2EC,mBAA3E;AAEA,MAAMH,oBAAoB,GAAG,sBAA7B;AACA,MAAME,mBAAmB,GAAG,qBAA5B;;AAEA,MAAMD,sBAAsB,GAAIG,OAAD,IAAa;AAC1C,SAAO;AAACC,IAAAA,IAAI,EAAEL,oBAAP;AAA6BI,IAAAA;AAA7B,GAAP;AACD,CAFD;;AAIA,MAAMD,mBAAmB,GAAIC,OAAD,IAAa;AACvC,SAAO;AAACC,IAAAA,IAAI,EAAEH,mBAAP;AAA4BE,IAAAA;AAA5B,GAAP;AACD,CAFD;AAKA;;;;;AAGA,OAAO,MAAME,wBAAwB,GAAIC,WAAD,IAAiB;AAEvD,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAE;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAAF,CAAR;AACA,WAAOI,KAAK,2CAA2C;AACrDC,MAAAA,MAAM,EAAE,MAD6C;AAErDC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAF4C;AAMrDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,WAAf;AAN+C,KAA3C,CAAL,CAQNQ,IARM,CAQDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARX,EASJF,IATI,CASCG,IAAI,IAAI;AACd,UAAIA,IAAI,CAACC,KAAT,EAAe;AACbX,QAAAA,QAAQ,CAAC;AAAEH,UAAAA,IAAI,EAAE,OAAR;AAAiBD,UAAAA,OAAO,EAAEc;AAA1B,SAAD,CAAR;AACD,OAFD,MAEO;AACLE,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC;AACAd,QAAAA,QAAQ,CAAC;AAAEH,UAAAA,IAAI,EAAEL,oBAAR;AAA8BI,UAAAA,OAAO,EAAEc;AAAvC,SAAD,CAAR;AACD;AACF,KAhBM,EAmBNK,KAnBM,CAmBAJ,KAAK,IAAI;AACd,aAAOA,KAAP;AACD,KArBM,CAAP;AAsBD,GAxBD;AAyBD,CA3BM","sourcesContent":["export {SUBSCRIPTION_SUCCESS, setSubscriptionSuccess, SUBSCRIPTION_FAILED, setSubscriptionFail }\n\nconst SUBSCRIPTION_SUCCESS = \"SUBSCRIPTION_SUCCESS\"\nconst SUBSCRIPTION_FAILED = \"SUBSCRIPTION_FAILED\"\n\nconst setSubscriptionSuccess = (payload) => {\n  return {type: SUBSCRIPTION_SUCCESS, payload}\n}\n\nconst setSubscriptionFail = (payload) => {\n  return {type: SUBSCRIPTION_FAILED, payload}\n}\n\n\n/****************************************************************\nFETCHES\n****************************************************************/\nexport const postToSubscriptionCreate = (credentials) => {\n\n  return (dispatch) => {\n    dispatch( { type: \"LOADING\" } );\n    return fetch(`http://localhost:3000/api/v1/subscribe`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    })\n    .then(response => response.json())\n      .then(data => {\n      if (data.error){\n        dispatch({ type: \"ERROR\", payload: data })\n      } else {\n        localStorage.setItem(\"token\", data.token)\n        dispatch({ type: SUBSCRIPTION_SUCCESS, payload: data })\n      }\n    }\n\n    )\n    .catch(error => {\n      return error;\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}