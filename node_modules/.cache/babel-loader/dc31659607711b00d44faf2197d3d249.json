{"ast":null,"code":"import _objectSpread from \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistSignup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Checkbox, Form, Input } from 'semantic-ui-react';\nimport { signUp } from '../actions/sessionActions';\nimport { postToArtistCreate } from '../actions/sessionActions';\nexport class ArtistSignup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      phone: \"\"\n    };\n\n    this.handleFormChange = (fieldInputName, event) => {\n      switch (fieldInputName) {\n        case \"email\":\n          this.setState(_objectSpread({}, this.state, {\n            email: event.target.value\n          }));\n          break;\n\n        case \"username\":\n          this.setState(_objectSpread({}, this.state, {\n            username: event.target.value\n          }));\n          break;\n\n        case \"password\":\n          this.setState(_objectSpread({}, this.state, {\n            password: event.target.value\n          }));\n          break;\n\n        case \"phone\":\n          this.setState(_objectSpread({}, this.state, {\n            phone: event.target.value\n          }));\n          break;\n      }\n    };\n\n    this.signupForm = () => {\n      // console.log(\"STATE\", this.state);\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Input, {\n        size: \"huge\",\n        placeholder: \"Email\",\n        value: this.state.email,\n        name: \"email\",\n        onChange: event => this.handleFormChange(\"email\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Input, {\n        fluid: true,\n        transparent: true,\n        placeholder: \"Username\",\n        value: this.state.username,\n        name: \"username\",\n        onChange: event => this.handleFormChange(\"username\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Password\",\n        type: \"password\",\n        value: this.state.password,\n        name: \"password\",\n        onChange: event => this.handleFormChange(\"password\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Phone\",\n        value: this.state.phone,\n        name: \"phone\",\n        onChange: event => this.handleFormChange(\"phone\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Submit\"));\n    };\n\n    this.dispatchSignup = () => {\n      this.props.dispatch(signUp(this.state.email, this.state.username, this.state.password, this.state.phone));\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const newArtist = {\n        email: this.state.email,\n        username: this.state.username,\n        password: this.state.password,\n        phone: this.state.phone\n      };\n      this.props.fetchArtistCreate(newArtist);\n    };\n\n    this.renderrIfLoggedIn = user => {};\n  }\n\n  render() {\n    console.log(\"PROPS\", this.props);\n    return this.signupForm();\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // const id = state.sessionsReducer.currentUser.id\n  const authenticated = state.sessionsReducer.authenticated;\n  debugger; // console.log(\"STTATE\", state);\n\n  return {\n    currentUser: {\n      id,\n      authenticated\n    }\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchArtistCreate: newArtist => dispatch(postToArtistCreate(newArtist))\n  };\n  console.log(\"DISPATCH\", dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArtistSignup);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistSignup.js"],"names":["React","Component","connect","Button","Checkbox","Form","Input","signUp","postToArtistCreate","ArtistSignup","state","email","username","password","phone","handleFormChange","fieldInputName","event","setState","target","value","signupForm","handleSubmit","dispatchSignup","props","dispatch","preventDefault","newArtist","fetchArtistCreate","renderrIfLoggedIn","user","render","console","log","mapStateToProps","authenticated","sessionsReducer","currentUser","id","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Checkbox, Form, Input } from 'semantic-ui-react'\nimport { signUp } from '../actions/sessionActions'\nimport { postToArtistCreate } from '../actions/sessionActions'\n\nexport class ArtistSignup extends Component {\n\n  state = {email: \"\", username: \"\", password: \"\", phone: \"\"}\n\n  handleFormChange = (fieldInputName, event) => {\n    switch(fieldInputName){\n      case \"email\":\n      this.setState( {...this.state, email: event.target.value} )\n      break;\n      case \"username\":\n      this.setState( {...this.state, username: event.target.value} )\n      break;\n      case \"password\":\n      this.setState( {...this.state, password: event.target.value} )\n      break;\n      case \"phone\":\n      this.setState( {...this.state, phone: event.target.value} )\n      break;\n    }\n  }\n\n\n\n  signupForm = () => {\n    // console.log(\"STATE\", this.state);\n    return (\n      <Form onSubmit={this.handleSubmit}>\n    <Form.Field>\n      <Input size='huge' placeholder='Email' value={this.state.email} name=\"email\" onChange={(event) => this.handleFormChange(\"email\", event)}/>\n    </Form.Field>\n    <Form.Field>\n      <Input fluid transparent placeholder='Username' value={this.state.username} name=\"username\" onChange={(event) => this.handleFormChange(\"username\", event)}/>\n    </Form.Field>\n    <Form.Field>\n      <Input placeholder='Password' type=\"password\" value={this.state.password} name=\"password\"  onChange={(event) => this.handleFormChange(\"password\", event)}/>\n    </Form.Field>\n    <Form.Field>\n      <Input placeholder='Phone' value={this.state.phone} name=\"phone\" onChange={(event) => this.handleFormChange(\"phone\", event)}/>\n    </Form.Field>\n    <Button type='submit'>Submit</Button>\n  </Form>\n    )\n  }\n\n  dispatchSignup = () => {\n    this.props.dispatch(signUp(this.state.email, this.state.username, this.state.password, this.state.phone))\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    const newArtist = {\n      email: this.state.email,\n      username: this.state.username,\n      password: this.state.password,\n      phone: this.state.phone\n    }\n\n    this.props.fetchArtistCreate(newArtist)\n  }\n\n  renderrIfLoggedIn = (user) => {\n\n  }\n\n  render(){\n    console.log(\"PROPS\", this.props);\n    return this.signupForm()\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  // const id = state.sessionsReducer.currentUser.id\n  const authenticated = state.sessionsReducer.authenticated\n  debugger\n  // console.log(\"STTATE\", state);\n  return {currentUser: { id , authenticated  }}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {fetchArtistCreate: (newArtist)=> dispatch(postToArtistCreate(newArtist))}\n  console.log(\"DISPATCH\", dispatch);\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArtistSignup);\n"]},"metadata":{},"sourceType":"module"}