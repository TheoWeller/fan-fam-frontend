{"ast":null,"code":"import _objectSpread from \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/SubscriptionPage.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Input, Header, Modal, Grid, Segment } from 'semantic-ui-react';\nimport { updateSubscriptionProps } from '../../actions/subscriptionActions';\n\nclass Subscribe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      slug: \"\",\n      title: \"\",\n      editTitle: false,\n      error: false\n    };\n\n    this.handleFormChange = (fieldInputName, event) => {\n      switch (fieldInputName) {\n        case \"slug\":\n          this.setState(_objectSpread({}, this.state, {\n            slug: event.target.value\n          }));\n          break;\n\n        case \"title\":\n          this.setState(_objectSpread({}, this.state, {\n            title: event.target.value\n          }));\n          break;\n      }\n    };\n\n    this.handleFormSubmit = e => {\n      e.preventDefault();\n      this.props.updateSubscriptionProps({\n        slug: this.state.slug,\n        pageId: this.props.subscriptionProps.pageId,\n        title: this.state.title\n      }).then(resp => resp.json()).then(data => {\n        debugger;\n      });\n    };\n\n    this.handleEditTitle = (action, event) => {\n      switch (action) {\n        case \"edit\":\n          this.setState(_objectSpread({}, this.state, {\n            editTitle: true\n          }));\n          break;\n\n        case \"done\":\n          this.setState(_objectSpread({}, this.state, {\n            editTitle: false\n          }));\n          break;\n      }\n    };\n\n    this.zipInput = () => {\n      return React.createElement(Form.Input, {\n        disabled: true,\n        transparent: true,\n        placeholder: \"Zipcode\",\n        value: this.state.zip,\n        name: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState(_objectSpread({}, this.state, {\n      slug: this.props.subscriptionProps.slug,\n      title: this.props.subscriptionProps.title\n    }));\n  }\n\n  render() {\n    console.log(\"ARRTIST-SUB\", this.state);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      open: this.state.editTitle,\n      basic: true,\n      size: \"tiny\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Header, {\n      textAlign: \"center\",\n      content: \"Edit title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"massive\",\n      onSubmit: event => this.handleEditTitle(\"done\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Input, {\n      textAlign: \"center\",\n      transparent: true,\n      value: this.state.title,\n      onChange: event => this.handleFormChange(\"title\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Input, {\n      transparent: true,\n      value: this.state.slug,\n      placeholder: \"Enter custom url\",\n      name: \"password\",\n      label: \"http://localhost:3001/subscribe/\",\n      onChange: event => this.handleFormChange(\"slug\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Save\")))), React.createElement(\"div\", {\n      id: \"artist-subscribe-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Header, {\n      inverted: true,\n      size: \"huge\",\n      textAlign: \"center\",\n      content: \"\".concat(this.props.subscriptionProps.title),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Segment, {\n      textAlign: \"center\",\n      id: \"header-edit-segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"massive\",\n      inverted: true,\n      onClick: () => this.handleEditTitle(\"edit\", null),\n      labelPosition: \"right\",\n      content: \"Edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"fan-subscribe-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"massive\",\n      onSubmit: this.handleFormSubmit,\n      style: {\n        \"margin-left\": \"40%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      required: true,\n      id: \"phone-field-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      disabled: true,\n      transparent: true,\n      id: \"phone-input-1\",\n      placeholder: \"(xxx)\",\n      value: this.state.phone1,\n      type: \"number\",\n      step: \"0.01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      id: \"phone-field-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      disabled: true,\n      transparent: true,\n      id: \"phone-input-2\",\n      placeholder: \"xxx\",\n      value: this.state.phone2,\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      id: \"phone-field-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      disabled: true,\n      transparent: true,\n      id: \"phone-input-3\",\n      placeholder: \"xxxx\",\n      value: this.state.phone3,\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      width: 6,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.zipInput())), React.createElement(Button, {\n      basic: true,\n      inverted: true,\n      textAlign: \"center\",\n      size: \"large\",\n      style: {\n        \"margin-top\": \"4%\",\n        \"margin-left\": \"11%\"\n      },\n      type: \"submit\",\n      content: \"Subscribe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateSubscriptionProps: updatedProps => dispatch(updateSubscriptionProps(updatedProps))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    subscriptionProps: state.sessionsReducer.currentUser.subscriptionProps\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscribe);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/SubscriptionPage.js"],"names":["React","Component","Fragment","connect","Button","Form","Input","Header","Modal","Grid","Segment","updateSubscriptionProps","Subscribe","state","slug","title","editTitle","error","handleFormChange","fieldInputName","event","setState","target","value","handleFormSubmit","e","preventDefault","props","pageId","subscriptionProps","then","resp","json","data","handleEditTitle","action","zipInput","zip","componentDidMount","render","console","log","phone1","phone2","phone3","mapDispatchToProps","dispatch","updatedProps","mapStateToProps","sessionsReducer","currentUser"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Input, Header, Modal, Grid, Segment } from 'semantic-ui-react'\n\n\nimport { updateSubscriptionProps } from '../../actions/subscriptionActions'\n\nclass Subscribe extends Component {\n  state={ slug: \"\", title: \"\", editTitle: false, error: false}\n\n\n  componentDidMount(){\n    this.setState({...this.state, slug: this.props.subscriptionProps.slug, title: this.props.subscriptionProps.title})\n    }\n\n  handleFormChange = (fieldInputName, event) => {\n    switch(fieldInputName){\n      case \"slug\":\n        this.setState( {...this.state, slug: event.target.value} )\n      break;\n      case \"title\":\n        this.setState( {...this.state, title: event.target.value} )\n      break;\n    }\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault()\n    this.props.updateSubscriptionProps({\n      slug: this.state.slug,\n      pageId: this.props.subscriptionProps.pageId,\n      title: this.state.title\n    })\n    .then(resp => resp.json())\n    .then(data => {\n      debugger\n    })\n  }\n\n  handleEditTitle = (action, event) => {\n    switch(action) {\n      case \"edit\":\n        this.setState({...this.state, editTitle: true})\n      break;\n      case \"done\":\n        this.setState({...this.state, editTitle: false})\n      break;\n    }\n  }\n\n  zipInput = () => {\n    return (\n      <Form.Input\n      disabled\n      transparent\n      placeholder='Zipcode'\n      value={this.state.zip}\n      name=\"password\"\n      />\n    )\n  }\n\n  render (){\n    console.log(\"ARRTIST-SUB\", this.state);\n    return (\n      <Fragment>\n      <Modal open={this.state.editTitle} basic size='tiny'>\n        <Header textAlign=\"center\" content='Edit title' />\n          <Modal.Content>\n          <Form size='massive' onSubmit={(event) => this.handleEditTitle(\"done\", event)}>\n            <Form.Field required>\n              <Input textAlign='center' transparent value={this.state.title} onChange={(event) => this.handleFormChange(\"title\", event)}/>\n            </Form.Field>\n            <Form.Field>\n              <Input transparent value={this.state.slug} placeholder='Enter custom url'name=\"password\" label='http://localhost:3001/subscribe/'  onChange={(event) => this.handleFormChange(\"slug\", event)}/>\n            </Form.Field>\n            <Button type='submit'>Save</Button>\n          </Form>\n          </Modal.Content>\n      </Modal>\n\n        <div id=\"artist-subscribe-header\">\n          <Header\n            inverted\n            size='huge'\n            textAlign='center'\n            content={`${this.props.subscriptionProps.title}`}\n          />\n          <Segment textAlign='center' id=\"header-edit-segment\">\n            <Button size='massive' inverted onClick={() => this.handleEditTitle(\"edit\", null)}  labelPosition='right' content='Edit' />\n          </Segment>\n        </div>\n          <div id=\"fan-subscribe-form-container\">\n            <Grid>\n              <Form size=\"massive\" onSubmit={this.handleFormSubmit} style={{\"margin-left\": \"40%\"}}>\n                <Grid.Row>\n                  <Form.Group>\n\n                    <Form.Field required id=\"phone-field-1\">\n                      <Form.Input\n                      disabled\n                      transparent\n                      id=\"phone-input-1\"\n                      placeholder='(xxx)'\n                      value={this.state.phone1}\n                      type=\"number\"\n                      step=\"0.01\"\n                      />\n                    </Form.Field>\n\n                    <Form.Field required id=\"phone-field-2\">\n                      <Form.Input\n                      disabled\n                      transparent\n                      id=\"phone-input-2\"\n                      placeholder='xxx'\n                      value={this.state.phone2}\n                      type=\"number\"\n                    />\n                    </Form.Field>\n\n                    <Form.Field required id=\"phone-field-3\">\n                      <Form.Input\n                      disabled\n                      transparent\n                      id=\"phone-input-3\"\n                      placeholder='xxxx'\n                      value={this.state.phone3}\n                      type=\"number\"\n                      />\n                    </Form.Field>\n\n                  </Form.Group>\n                </Grid.Row>\n                <Grid.Row>\n                  <Form.Field width={6} required>\n                  {this.zipInput()}\n                  </Form.Field>\n                </Grid.Row>\n                <Button basic inverted textAlign='center' size=\"large\" style={{\"margin-top\": \"4%\", \"margin-left\": \"11%\"}} type='submit' content=\"Subscribe\"/>\n              </Form>\n            </Grid>\n          </div>\n        </Fragment>\n    )\n\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {updateSubscriptionProps: (updatedProps)=> dispatch(updateSubscriptionProps(updatedProps))}\n}\n\nconst mapStateToProps = (state) => {\n    return {subscriptionProps: state.sessionsReducer.currentUser.subscriptionProps}\n  }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscribe)\n"]},"metadata":{},"sourceType":"module"}