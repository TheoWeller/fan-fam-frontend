{"ast":null,"code":"export { login, signUp };\nconst SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\nconst LOGIN = 'LOGIN';\nconst SIGNUP = 'SIGNUP';\n\nconst login = (email, password) => {\n  return {\n    type: LOGIN,\n    email,\n    password\n  };\n};\n\nconst signUp = (email, username, password, phone) => {\n  return {\n    type: SIGNUP,\n    email,\n    username,\n    password,\n    phone\n  };\n};\n\nconst setLoginPending = isLoginPending => {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n};\n\nconst setLoginSuccess = isLoginSuccess => {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n};\n\nconst setLoginError = isLoginError => {\n  return {\n    type: SET_LOGIN_ERROR,\n    isLoginError\n  };\n};\n/*****************************************************************/\n\n\nFETCHES;\n/*****************************************************************/\n\nexport const fetchCats = () => {\n  // console.log(dispatch)\n  return dispatch => {\n    dispatch({\n      type: \"LOADING_CATS\"\n    });\n    return fetch('http://localhost:4000/db').then(response => {\n      return response.json();\n    }).then(data => {\n      const cats = data.images;\n      dispatch({\n        type: \"FETCH_CATS\",\n        payload: cats\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/actions/signup-login.js"],"names":["login","signUp","SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","SET_LOGIN_ERROR","LOGIN","SIGNUP","email","password","type","username","phone","setLoginPending","isLoginPending","setLoginSuccess","isLoginSuccess","setLoginError","isLoginError","FETCHES","fetchCats","dispatch","fetch","then","response","json","data","cats","images","payload"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,MAAhB;AAEA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,MAAM,GAAG,QAAf;;AAEA,MAAMN,KAAK,GAAG,CAACO,KAAD,EAAQC,QAAR,KAAqB;AACjC,SAAO;AAACC,IAAAA,IAAI,EAAEJ,KAAP;AAAcE,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,GAAP;AACD,CAFD;;AAIA,MAAMP,MAAM,GAAG,CAACM,KAAD,EAAQG,QAAR,EAAkBF,QAAlB,EAA4BG,KAA5B,KAAsC;AACnD,SAAO;AAACF,IAAAA,IAAI,EAAEH,MAAP;AAAeC,IAAAA,KAAf;AAAsBG,IAAAA,QAAtB;AAAgCF,IAAAA,QAAhC;AAA0CG,IAAAA;AAA1C,GAAP;AACD,CAFD;;AAIA,MAAMC,eAAe,GAAIC,cAAD,IAAoB;AAC1C,SAAO;AAACJ,IAAAA,IAAI,EAAEP,iBAAP;AAA0BW,IAAAA;AAA1B,GAAP;AACD,CAFD;;AAIA,MAAMC,eAAe,GAAIC,cAAD,IAAoB;AAC1C,SAAO;AAACN,IAAAA,IAAI,EAAEN,iBAAP;AAA0BY,IAAAA;AAA1B,GAAP;AACD,CAFD;;AAIA,MAAMC,aAAa,GAAIC,YAAD,IAAkB;AACtC,SAAO;AAACR,IAAAA,IAAI,EAAEL,eAAP;AAAwBa,IAAAA;AAAxB,GAAP;AACD,CAFD;AAIA;;;AACAC,OAAO;AACP;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B;AACA,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEX,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,WAAOY,KAAK,CAAC,0BAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHM,EAGJF,IAHI,CAGCG,IAAI,IAAI;AACd,YAAMC,IAAI,GAAGD,IAAI,CAACE,MAAlB;AACAP,MAAAA,QAAQ,CAAC;AAAEX,QAAAA,IAAI,EAAE,YAAR;AAAsBmB,QAAAA,OAAO,EAAEF;AAA/B,OAAD,CAAR;AACD,KANM,CAAP;AAOD,GATD;AAUD,CAZM","sourcesContent":["export { login, signUp };\n\nconst SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\nconst LOGIN = 'LOGIN'\nconst SIGNUP = 'SIGNUP'\n\nconst login = (email, password) => {\n  return {type: LOGIN, email, password}\n}\n\nconst signUp = (email, username, password, phone) => {\n  return {type: SIGNUP, email, username, password, phone}\n}\n\nconst setLoginPending = (isLoginPending) => {\n  return {type: SET_LOGIN_PENDING, isLoginPending}\n}\n\nconst setLoginSuccess = (isLoginSuccess) => {\n  return {type: SET_LOGIN_SUCCESS, isLoginSuccess}\n}\n\nconst setLoginError = (isLoginError) => {\n  return {type: SET_LOGIN_ERROR, isLoginError}\n}\n\n/*****************************************************************/\nFETCHES\n/*****************************************************************/\nexport const fetchCats = () => {\n  // console.log(dispatch)\n  return (dispatch) => {\n    dispatch({ type: \"LOADING_CATS\" });\n    return fetch('http://localhost:4000/db')\n    .then(response => {\n      return response.json()\n    }).then(data => {\n      const cats = data.images\n      dispatch({ type: \"FETCH_CATS\", payload: cats})\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}