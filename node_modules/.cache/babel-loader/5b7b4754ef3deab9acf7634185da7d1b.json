{"ast":null,"code":"import _objectSpread from \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/SubscriptionPage.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Input, Header, Modal, Grid } from 'semantic-ui-react';\nimport { updateSubscriptionProps } from '../../actions/subscriptionActions';\n\nclass Subscribe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      slug: \"\",\n      title: \"\",\n      editTitle: false,\n      error: false\n    };\n\n    this.handleFormChange = (fieldInputName, event) => {\n      switch (fieldInputName) {\n        case \"slug\":\n          this.setState(_objectSpread({}, this.state, {\n            slug: event.target.value\n          }));\n          break;\n\n        case \"title\":\n          this.setState(_objectSpread({}, this.state, {\n            title: event.target.value\n          }));\n          break;\n      }\n    };\n\n    this.handleFormSubmit = e => {\n      e.preventDefault();\n      this.props.updateSubscriptionProps({\n        slug: this.state.slug,\n        pageId: this.props.subscriptionProps.pageId,\n        title: this.state.title\n      }).then(resp => resp.json());\n    };\n\n    this.handleEditTitle = (action, event) => {\n      switch (action) {\n        case \"edit\":\n          this.setState(_objectSpread({}, this.state, {\n            editTitle: true\n          }));\n          break;\n\n        case \"done\":\n          this.setState(_objectSpread({}, this.state, {\n            editTitle: false\n          }));\n          break;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState(_objectSpread({}, this.state, {\n      slug: this.props.subscriptionProps.slug,\n      title: this.props.subscriptionProps.title\n    }));\n  }\n\n  render() {\n    console.log(\"ARRTIST-SUB\", this.state);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      open: this.props.isSubscribed,\n      basic: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Header, {\n      textAlign: \"center\",\n      content: \"Thank you for subscribing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"fan-subscribe-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Header, {\n      inverted: true,\n      size: \"huge\",\n      textAlign: \"center\",\n      content: \"\".concat(this.props.subscriptionProps.title),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"fan-subscribe-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"massive\",\n      onSubmit: this.handleFormSubmit,\n      style: {\n        \"margin-left\": \"40%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      required: true,\n      id: \"phone-field-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      disabled: true,\n      transparent: true,\n      id: \"phone-input-1\",\n      placeholder: \"(xxx)\",\n      value: this.state.phone1,\n      type: \"number\",\n      step: \"0.01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      id: \"phone-field-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      disabled: true,\n      transparent: true,\n      id: \"phone-input-2\",\n      placeholder: \"xxx\",\n      value: this.state.phone2,\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      id: \"phone-field-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      disabled: true,\n      transparent: true,\n      id: \"phone-input-3\",\n      placeholder: \"xxxx\",\n      value: this.state.phone3,\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      width: 6,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Button, {\n      basic: true,\n      inverted: true,\n      size: \"large\",\n      style: {\n        \"margin-top\": \"4%\",\n        \"margin-left\": \"11%\"\n      },\n      type: \"submit\",\n      content: \"Subscribe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateSubscriptionProps: updatedProps => dispatch(updateSubscriptionProps(updatedProps))\n  };\n};\n\nconst mapStateToProps = state => {\n  debugger;\n  return {\n    subscriptionProps: state.sessionsReducer.currentUser.subscriptionProps\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscribe);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/ArtistViews/SubscriptionPage.js"],"names":["React","Component","Fragment","connect","Button","Form","Input","Header","Modal","Grid","updateSubscriptionProps","Subscribe","state","slug","title","editTitle","error","handleFormChange","fieldInputName","event","setState","target","value","handleFormSubmit","e","preventDefault","props","pageId","subscriptionProps","then","resp","json","handleEditTitle","action","componentDidMount","render","console","log","isSubscribed","phone1","phone2","phone3","mapDispatchToProps","dispatch","updatedProps","mapStateToProps","sessionsReducer","currentUser"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Input, Header, Modal, Grid } from 'semantic-ui-react'\n\n\nimport { updateSubscriptionProps } from '../../actions/subscriptionActions'\n\nclass Subscribe extends Component {\n  state={ slug: \"\", title: \"\", editTitle: false, error: false}\n\n\n  componentDidMount(){\n    this.setState({...this.state, slug: this.props.subscriptionProps.slug, title: this.props.subscriptionProps.title})\n    }\n\n  handleFormChange = (fieldInputName, event) => {\n    switch(fieldInputName){\n      case \"slug\":\n        this.setState( {...this.state, slug: event.target.value} )\n      break;\n      case \"title\":\n        this.setState( {...this.state, title: event.target.value} )\n      break;\n    }\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault()\n    this.props.updateSubscriptionProps({\n      slug: this.state.slug,\n      pageId: this.props.subscriptionProps.pageId,\n      title: this.state.title\n    })\n    .then(resp => resp.json())\n  }\n\n  handleEditTitle = (action, event) => {\n    switch(action) {\n      case \"edit\":\n        this.setState({...this.state, editTitle: true})\n      break;\n      case \"done\":\n        this.setState({...this.state, editTitle: false})\n      break;\n    }\n  }\n\n\n  render (){\n    console.log(\"ARRTIST-SUB\", this.state);\n    return (\n      <Fragment>\n        <Modal open={this.props.isSubscribed} basic size='small'>\n          <Header\n            textAlign=\"center\"\n            content='Thank you for subscribing'\n            />\n        </Modal>\n\n        <div id=\"fan-subscribe-header\">\n          <Header\n            inverted\n            size='huge'\n            textAlign='center'\n            content={`${this.props.subscriptionProps.title}`}\n          />\n        </div>\n          <div id=\"fan-subscribe-form-container\">\n            <Grid>\n              <Form size=\"massive\" onSubmit={this.handleFormSubmit} style={{\"margin-left\": \"40%\"}}>\n                <Grid.Row>\n                  <Form.Group>\n\n                    <Form.Field required id=\"phone-field-1\">\n                      <Form.Input\n                      disabled\n                      transparent\n                      id=\"phone-input-1\"\n                      placeholder='(xxx)'\n                      value={this.state.phone1}\n                      type=\"number\"\n                      step=\"0.01\"\n                      />\n                    </Form.Field>\n\n                    <Form.Field required id=\"phone-field-2\">\n                      <Form.Input\n                      disabled\n                      transparent\n                      id=\"phone-input-2\"\n                      placeholder='xxx'\n                      value={this.state.phone2}\n                      type=\"number\"\n                    />\n                    </Form.Field>\n\n                    <Form.Field required id=\"phone-field-3\">\n                      <Form.Input\n                      disabled\n                      transparent\n                      id=\"phone-input-3\"\n                      placeholder='xxxx'\n                      value={this.state.phone3}\n                      type=\"number\"\n                      />\n                    </Form.Field>\n\n                  </Form.Group>\n                </Grid.Row>\n                <Grid.Row>\n                  <Form.Field width={6} required>\n                  </Form.Field>\n                </Grid.Row>\n                <Button basic inverted size=\"large\" style={{\"margin-top\": \"4%\", \"margin-left\": \"11%\"}} type='submit' content=\"Subscribe\"/>\n              </Form>\n            </Grid>\n          </div>\n        </Fragment>\n    )\n\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {updateSubscriptionProps: (updatedProps)=> dispatch(updateSubscriptionProps(updatedProps))}\n}\n\nconst mapStateToProps = (state) => {\n  debugger\n    return {subscriptionProps: state.sessionsReducer.currentUser.subscriptionProps}\n  }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscribe)\n"]},"metadata":{},"sourceType":"module"}