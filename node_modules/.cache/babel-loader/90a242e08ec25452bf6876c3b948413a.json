{"ast":null,"code":"/****************************************************************\nFETCH\n****************************************************************/\nexport const postToBlastCreate = (blastContent, route) => {\n  return dispatch => {\n    debugger;\n    dispatch({\n      type: \"BLAST_PENDING\"\n    });\n    return fetch(\"http://localhost:3000/api/v1/blast/\".concat(route), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(blastContent)\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        dispatch({\n          type: \"BLAST_ERROR\",\n          payload: data\n        });\n      } else {\n        console.log(\"BLAST\", data);\n        dispatch({\n          type: \"BLAST_SUCCESS\",\n          payload: data\n        });\n      }\n\n      return data;\n    }).catch(error => {\n      return error;\n    });\n  };\n};","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/actions/blastActions.js"],"names":["postToBlastCreate","blastContent","route","dispatch","type","fetch","method","headers","body","JSON","stringify","then","response","json","data","error","payload","console","log","catch"],"mappings":"AACA;;;AAGA,OAAO,MAAMA,iBAAiB,GAAG,CAACC,YAAD,EAAeC,KAAf,KAAyB;AACxD,SAAQC,QAAD,IAAc;AACnB;AACAA,IAAAA,QAAQ,CAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAF,CAAR;AACA,WAAOC,KAAK,8CAAuCH,KAAvC,GAAgD;AAC1DI,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAFiD;AAM1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,YAAf;AANoD,KAAhD,CAAL,CAQNU,IARM,CAQDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARX,EASJF,IATI,CASCG,IAAI,IAAI;AACd,UAAIA,IAAI,CAACC,KAAT,EAAe;AACbZ,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAE,aAAR;AAAuBY,UAAAA,OAAO,EAAEF;AAAhC,SAAD,CAAR;AACD,OAFD,MAEO;AACLG,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,IAArB;AACAX,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAE,eAAR;AAAyBY,UAAAA,OAAO,EAAEF;AAAlC,SAAD,CAAR;AACD;;AACD,aAAOA,IAAP;AACD,KAjBM,EAmBRK,KAnBQ,CAmBFJ,KAAK,IAAI;AACd,aAAOA,KAAP;AACD,KArBQ,CAAP;AAsBH,GAzBC;AA0BD,CA3BM","sourcesContent":["\n/****************************************************************\nFETCH\n****************************************************************/\nexport const postToBlastCreate = (blastContent, route) => {\n  return (dispatch) => {\n    debugger\n    dispatch( { type: \"BLAST_PENDING\" } );\n    return fetch(`http://localhost:3000/api/v1/blast/${route}`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(blastContent)\n    })\n    .then(response => response.json())\n      .then(data => {\n      if (data.error){\n        dispatch({ type: \"BLAST_ERROR\", payload: data })\n      } else {\n        console.log(\"BLAST\", data);\n        dispatch({ type: \"BLAST_SUCCESS\", payload: data })\n      }\n      return data\n    }\n  )\n  .catch(error => {\n    return error;\n  })\n}\n}\n"]},"metadata":{},"sourceType":"module"}