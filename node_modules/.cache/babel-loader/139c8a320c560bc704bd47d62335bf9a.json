{"ast":null,"code":"var _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/Dashboard.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Statistic, Header, Icon } from 'semantic-ui-react';\nimport FanbaseStats from './ArtistViews/FanbaseStats';\nimport { logout } from '../actions/sessionActions';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: 'home'\n    };\n\n    this.handleLogout = () => {\n      this.props.dispatch(this.props.dispatch(logout()));\n    };\n\n    this.handleItemClick = (e, {\n      name\n    }) => this.setState({\n      activeItem: name\n    });\n  }\n\n  //TODO: add placeholder stats in top cities + states if none exist\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"user-subscription-copy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Header, {\n      inverted: true,\n      as: \"h2\",\n      content: \"My Subscription Page\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(Button, {\n      size: \"massive\",\n      animated: \"fade\",\n      icon: true,\n      labelPosition: \"right\",\n      id: \"copy-url-btn\",\n      basic: true,\n      inverted: true,\n      size: \"large\",\n      type: \"button\",\n      \"data-clipboard-text\": url,\n      \"data-clipboard-action\": \"copy\",\n      onClick: () => this.copySubscriptionLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Button.Content, {\n      visible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"http://localhost:3001/subscribe/\".concat(this.props.slug)), React.createElement(Button.Content, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Click to copy...\"), React.createElement(Icon, {\n      name: \"copy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))), React.createElement(FanbaseStats, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    fanCount: state.sessionsReducer.currentUser.fanbase.count,\n    topCities: state.sessionsReducer.currentUser.fanbase.top_cities,\n    topStates: state.sessionsReducer.currentUser.fanbase.top_states\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard); // <Fragment>\n//   <Header id=\"stats-icon-header\" inverted textAlign='center' as='h2' icon>\n//     <Icon inverted name='signal' />\n//       Stats\n//   </Header>\n// </Fragment>","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/Dashboard.js"],"names":["React","Component","Fragment","connect","Statistic","Header","Icon","FanbaseStats","logout","Dashboard","state","activeItem","handleLogout","props","dispatch","handleItemClick","e","name","setState","render","url","copySubscriptionLink","slug","mapStateToProps","fanCount","sessionsReducer","currentUser","fanbase","count","topCities","top_cities","topStates","top_states"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,QAAwC,mBAAxC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,SAAQC,MAAR,QAAqB,2BAArB;;AAEA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCS,KADgC,GACxB;AAAEC,MAAAA,UAAU,EAAE;AAAd,KADwB;;AAAA,SAGhCC,YAHgC,GAGjB,MAAM;AACnB,WAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKD,KAAL,CAAWC,QAAX,CAAoBN,MAAM,EAA1B,CAApB;AACD,KAL+B;;AAAA,SAOhCO,eAPgC,GAOd,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAiB,KAAKC,QAAL,CAAc;AAAEP,MAAAA,UAAU,EAAEM;AAAd,KAAd,CAPH;AAAA;;AAQhC;AACAE,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,wBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,EAAE,EAAC,IAApB;AAAyB,MAAA,OAAO,EAAC,sBAAjC;AAAwD,MAAA,SAAS,EAAC,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEI,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,QAAQ,EAAC,MAFX;AAGE,MAAA,IAAI,MAHN;AAIE,MAAA,aAAa,EAAC,OAJhB;AAKE,MAAA,EAAE,EAAC,cALL;AAME,MAAA,KAAK,MANP;AAOE,MAAA,QAAQ,MAPV;AAQE,MAAA,IAAI,EAAC,OARP;AASE,MAAA,IAAI,EAAC,QATP;AAUE,6BAAsBC,GAVxB;AAWE,+BAAsB,MAXxB;AAYE,MAAA,OAAO,EAAE,MAAM,KAAKC,oBAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,MAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAA4D,KAAKR,KAAL,CAAWS,IAAvE,EAdF,EAeE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,MAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAfF,EAgBA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBA,CAFJ,CADJ,EAsBE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,CADF;AA0BD;;AApC+B;;AAuClC,MAAMC,eAAe,GAAIb,KAAD,IAAW;AAC/B,SAAO;AACLc,IAAAA,QAAQ,EAAEd,KAAK,CAACe,eAAN,CAAsBC,WAAtB,CAAkCC,OAAlC,CAA0CC,KAD/C;AAELC,IAAAA,SAAS,EAAEnB,KAAK,CAACe,eAAN,CAAsBC,WAAtB,CAAkCC,OAAlC,CAA0CG,UAFhD;AAGLC,IAAAA,SAAS,EAAErB,KAAK,CAACe,eAAN,CAAsBC,WAAtB,CAAkCC,OAAlC,CAA0CK;AAHhD,GAAP;AAMH,CAPD;;AASA,eAAe7B,OAAO,CAACoB,eAAD,CAAP,CAAyBd,SAAzB,CAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Statistic, Header, Icon } from 'semantic-ui-react'\nimport FanbaseStats from './ArtistViews/FanbaseStats'\n\nimport {logout} from '../actions/sessionActions'\n\nclass Dashboard extends Component {\n  state = { activeItem: 'home' }\n\n  handleLogout = () => {\n    this.props.dispatch(this.props.dispatch(logout()))\n  }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n  //TODO: add placeholder stats in top cities + states if none exist\n  render (){\n    return (\n      <Fragment>\n          <div id=\"user-subscription-copy\">\n            <Header inverted as='h2' content=\"My Subscription Page\" textAlign='center'/>\n              <Button\n                size=\"massive\"\n                animated='fade'\n                icon\n                labelPosition='right'\n                id=\"copy-url-btn\"\n                basic\n                inverted\n                size=\"large\"\n                type='button'\n                data-clipboard-text={ url }\n                data-clipboard-action=\"copy\"\n                onClick={() => this.copySubscriptionLink}\n              >\n                <Button.Content visible>{`http://localhost:3001/subscribe/${this.props.slug}`}</Button.Content>\n                <Button.Content hidden>Click to copy...</Button.Content>\n              <Icon name='copy'/>\n              </Button>\n          </div>\n        <FanbaseStats/>\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      fanCount: state.sessionsReducer.currentUser.fanbase.count,\n      topCities: state.sessionsReducer.currentUser.fanbase.top_cities,\n      topStates: state.sessionsReducer.currentUser.fanbase.top_states\n    }\n\n}\n\nexport default connect(mapStateToProps)(Dashboard)\n\n// <Fragment>\n//   <Header id=\"stats-icon-header\" inverted textAlign='center' as='h2' icon>\n//     <Icon inverted name='signal' />\n//       Stats\n//   </Header>\n// </Fragment>\n"]},"metadata":{},"sourceType":"module"}