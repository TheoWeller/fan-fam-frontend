{"ast":null,"code":"var _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/App.js\";\nimport React from 'react';\nimport { Component, Fragment } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { postToArtistCreate } from './actions/sessionActions';\nimport ArtistSignup from './components/ArtistSignup';\nimport Dashboard from './components/Dashboard';\nimport Login from './components/Login';\nimport Subscribe from './components/FanView/Subscribe';\nimport SubscriptionPage from './components/ArtistViews/SubscriptionPage';\nimport Settings from './components/ArtistViews/Settings';\nimport BlastContainer from './components/ArtistViews/Blasts/BlastContainer';\nimport DraftBlast from './components/ArtistViews/DraftBlast';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport { LOGIN, autoLogin } from './actions/sessionActions';\nimport { postToBlastCreate } from './actions/blastActions';\nimport $ from \"jquery\";\nimport Ahoy from 'ahoy.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      unAuthenticated: false,\n      redirectLink: null\n    };\n\n    this.renderSomething = () => {\n      if (this.props.isAuthenticated) {\n        return React.createElement(Navbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.handleRedirectFromTextBlasts = (uniqueKey, route) => {\n      Ahoy.configure({\n        urlPrefix: \"\",\n        visitsUrl: \"http://localhost:3000/api/v1/visits\",\n        eventsUrl: \"/ahoy/events\",\n        page: null,\n        platform: \"Web\",\n        useBeacon: true,\n        startOnReady: true,\n        trackVisits: true,\n        cookies: true,\n        cookieDomain: null,\n        headers: {},\n        visitParams: {},\n        withCredentials: false\n      }); // const page = Ahoy.configure({page: \"Landing page\"});\n\n      Ahoy.trackView();\n      Ahoy.trackClicks();\n      this.props.redirect({\n        key: uniqueKey.replace(/^\\/|\\/$/g, '')\n      }, \"redirect\").then(data => {\n        const url = data.url.replace(/^\\/|\\/$/g, ''); // window.location.href = `http://${url}`\n      });\n      return null;\n    };\n\n    this.checkForToken = () => {\n      const token = localStorage.token;\n\n      if (token) {\n        this.props.fetchArtistCreate(autoLogin(token));\n      } else {\n        this.setState({\n          unAuthenticated: true\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.checkForToken();\n  }\n\n  render() {\n    // console.log(\"CURRENT USER IN APP.JS\", this.props);\n    if (this.props.doneLoading || this.state.unAuthenticated) {\n      if (!this.props.isAuthenticated || !this.props.currentUser) {\n        return React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(Route, {\n          exact: true,\n          path: \"/:slug\",\n          component: () => {\n            this.handleRedirectFromTextBlasts(this.props.location.pathname, \"redirect\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/subscribe/:slug\",\n          component: Subscribe,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), React.createElement(Redirect, {\n          to: '/',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, this.renderSomething(), React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Route, {\n          path: \"/dashboard\",\n          component: Dashboard,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/subscribe/edit\",\n          component: SubscriptionPage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/settings\",\n          component: Settings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/blasts/draft\",\n          component: DraftBlast,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(Route, {\n          exact: true,\n          path: \"/blasts\",\n          component: BlastContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        })));\n      }\n    } else {\n      // show a spinner\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"loading......\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.sessionsReducer.authenticated,\n    currentUser: state.sessionsReducer.currentUser,\n    // isAuthenticated: state.sessionsReducer.currentUser.id,\n    doneLoading: !state.sessionsReducer.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchArtistCreate: token => dispatch(postToArtistCreate(token, \"auto_login\")),\n    redirect: (blastContent, route) => dispatch(postToBlastCreate(blastContent, route))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App)); //\n//","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/App.js"],"names":["React","Component","Fragment","Button","Switch","Route","Redirect","withRouter","connect","postToArtistCreate","ArtistSignup","Dashboard","Login","Subscribe","SubscriptionPage","Settings","BlastContainer","DraftBlast","Navbar","Home","LOGIN","autoLogin","postToBlastCreate","$","Ahoy","App","state","unAuthenticated","redirectLink","renderSomething","props","isAuthenticated","handleRedirectFromTextBlasts","uniqueKey","route","configure","urlPrefix","visitsUrl","eventsUrl","page","platform","useBeacon","startOnReady","trackVisits","cookies","cookieDomain","headers","visitParams","withCredentials","trackView","trackClicks","redirect","key","replace","then","data","url","checkForToken","token","localStorage","fetchArtistCreate","setState","componentDidMount","render","doneLoading","currentUser","location","pathname","mapStateToProps","sessionsReducer","authenticated","loading","mapDispatchToProps","dispatch","blastContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Component, Fragment} from 'react';\nimport { Button } from 'semantic-ui-react'\nimport {Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport 'semantic-ui-css/semantic.min.css'\nimport { connect } from 'react-redux';\n\nimport './App.css';\nimport { postToArtistCreate } from './actions/sessionActions'\nimport ArtistSignup from './components/ArtistSignup'\nimport Dashboard from './components/Dashboard'\nimport Login from './components/Login'\nimport Subscribe from './components/FanView/Subscribe'\nimport SubscriptionPage from './components/ArtistViews/SubscriptionPage'\nimport Settings from './components/ArtistViews/Settings'\nimport BlastContainer from './components/ArtistViews/Blasts/BlastContainer'\nimport DraftBlast from './components/ArtistViews/DraftBlast'\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport {LOGIN, autoLogin} from './actions/sessionActions'\nimport { postToBlastCreate } from './actions/blastActions'\nimport $ from \"jquery\";\nimport Ahoy from 'ahoy.js';\n\n\nclass App extends Component {\n\n  state = {unAuthenticated: false, redirectLink: null}\n\n  componentDidMount(){\n    this.checkForToken()\n  }\n\n  renderSomething = () => {\n    if(this.props.isAuthenticated){\n      return <Navbar />\n    }\n  }\n\n//TODO: handle url formatting\n//TODO: make route accessable when user's are logged in\n  handleRedirectFromTextBlasts = (uniqueKey, route) => {\n    Ahoy.configure({\n      urlPrefix: \"\",\n      visitsUrl: \"http://localhost:3000/api/v1/visits\",\n      eventsUrl: \"/ahoy/events\",\n      page: null,\n      platform: \"Web\",\n      useBeacon: true,\n      startOnReady: true,\n      trackVisits: true,\n      cookies: true,\n      cookieDomain: null,\n      headers: {},\n      visitParams: {},\n      withCredentials: false\n    });\n    // const page = Ahoy.configure({page: \"Landing page\"});\n    Ahoy.trackView();\n    Ahoy.trackClicks();\n    this.props.redirect({ key: uniqueKey.replace(/^\\/|\\/$/g, '') }, \"redirect\")\n    .then(data => {\n      const url = data.url.replace(/^\\/|\\/$/g, '')\n      // window.location.href = `http://${url}`\n    })\n    return null\n  }\n\n\n\n  checkForToken = () => {\n    const token = localStorage.token\n    if (token) {\n      this.props.fetchArtistCreate(autoLogin(token))\n    } else {\n      this.setState({unAuthenticated: true})\n    }\n  }\n\n\n  render(){\n    // console.log(\"CURRENT USER IN APP.JS\", this.props);\n    if (this.props.doneLoading || this.state.unAuthenticated) {\n      if(!this.props.isAuthenticated || !this.props.currentUser){\n        return (\n          <Switch>\n          <Route exact path='/' component={Home}/>\n          <Route exact path='/:slug' component={() => {this.handleRedirectFromTextBlasts(this.props.location.pathname, \"redirect\")}}/>\n          <Route path='/subscribe/:slug' component={Subscribe}/>\n          <Redirect to={'/'}/>\n          </Switch>\n        )\n      } else {\n        return (\n          <Fragment>\n            {this.renderSomething()}\n            <Switch>\n              <Route path='/dashboard' component={Dashboard}/>\n              <Route path='/subscribe/edit' component={SubscriptionPage}/>\n              <Route path='/settings' component={Settings}/>\n              <Route path='/blasts/draft' component={DraftBlast}/>\n              <Route exact path='/blasts' component={BlastContainer}/>\n            </Switch>\n          </Fragment>\n        );\n      }\n    } else {\n      // show a spinner\n      return <h1>loading......</h1>\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.sessionsReducer.authenticated,\n    currentUser: state.sessionsReducer.currentUser,\n    // isAuthenticated: state.sessionsReducer.currentUser.id,\n    doneLoading: !state.sessionsReducer.loading\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchArtistCreate: (token)=> dispatch(postToArtistCreate(token, \"auto_login\")),\n    redirect: (blastContent, route)=> dispatch(postToBlastCreate(blastContent, route))\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n//\n//\n"]},"metadata":{},"sourceType":"module"}