{"ast":null,"code":"import _objectSpread from \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/FanView/Subscribe.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Input, Header, Modal, Segment, Grid } from 'semantic-ui-react';\nimport { postToSubscriptionCreate } from '../../actions/subscriptionActions';\n\nclass Subscribe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      phone1: \"\",\n      phone2: \"\",\n      phone3: \"\",\n      zip: \"\",\n      slug: \"\",\n      payload: {},\n      zipError: false\n      /****************************************************************\n      FETCHES\n      ****************************************************************/\n\n    };\n\n    this.fetchArtistShowPage = slug => {\n      fetch(\"http://localhost:3000/api/v1/subscribe/\".concat(slug)).then(r => r.json()).then(data => {\n        this.setState(_objectSpread({}, this.state, {\n          payload: data.payload\n        }));\n      });\n    };\n\n    this.handleFormSubmit = () => {\n      const isValidZip = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(this.state.zip);\n      const phone = \"1\" + \"\".concat(this.state.phone1 + this.state.phone2 + this.state.phone3);\n\n      if (isValidZip) {\n        this.props.postToSubscriptionCreate({\n          phone: phone,\n          zip: this.state.zip,\n          slug: this.state.slug\n        });\n      } else {\n        this.setState(_objectSpread({}, this.state, {\n          zip: \"\",\n          zipError: true\n        }));\n      }\n    };\n\n    this.handleFormChange = (fieldInputName, event) => {\n      switch (fieldInputName) {\n        case \"phone1\":\n          if (event.target.value.length === 3) {\n            this.setState(_objectSpread({}, this.state, {\n              phone1: event.target.value\n            }), () => {\n              this.focusOnNextField(\"2\");\n            });\n          } else {\n            this.setState(_objectSpread({}, this.state, {\n              phone1: event.target.value\n            }));\n          }\n\n          break;\n\n        case \"phone2\":\n          if (event.target.value.length === 3) {\n            this.setState(_objectSpread({}, this.state, {\n              phone2: event.target.value\n            }), () => {\n              this.focusOnNextField(\"3\");\n            });\n          } else {\n            this.setState(_objectSpread({}, this.state, {\n              phone2: event.target.value\n            }));\n          }\n\n          break;\n\n        case \"phone3\":\n          if (event.target.value.length <= 4) {\n            this.setState(_objectSpread({}, this.state, {\n              phone3: event.target.value\n            }));\n          }\n\n          break;\n\n        case \"zip\":\n          this.setState(_objectSpread({}, this.state, {\n            zip: event.target.value\n          }));\n          break;\n      }\n    };\n\n    this.focusOnNextField = id => {\n      document.getElementById(\"phone-input-\".concat(id)).focus();\n    };\n\n    this.handleZipcodeError = () => {\n      return !this.state.zipError ? this.zipInput() : this.zipInputError();\n    };\n\n    this.zipInputError = () => {\n      return React.createElement(Form.Input, {\n        error: true,\n        placeholder: \"Invalid zipcode\",\n        value: this.state.zip,\n        name: \"password\",\n        onChange: event => this.handleFormChange(\"zip\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    };\n\n    this.zipInput = () => {\n      return React.createElement(Form.Input, {\n        placeholder: \"Zipcode\",\n        value: this.state.zip,\n        name: \"password\",\n        onChange: event => this.handleFormChange(\"zip\", event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    };\n  }\n\n  componentDidMount() {\n    const slug = this.props.match.params.slug;\n\n    if (slug) {\n      this.setState(_objectSpread({}, this.state, {\n        slug\n      }));\n      this.fetchArtistShowPage(slug);\n    } else {\n      this.fetchArtistShowPage(this.props.currentUser.username);\n    }\n  }\n\n  //    moveOnMax = (field,nextFieldID) => {\n  //   if(field.value.length >= field.maxLength){\n  //     document.getElementById(nextFieldID).focus();\n  //   }\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      open: this.props.isSubscribed,\n      basic: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Header, {\n      textAlign: \"center\",\n      content: \"Thank you for subscribing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), this.state.payload.title && React.createElement(Header, {\n      as: \"h1\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"\".concat(this.state.payload.title)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"fan-subscribe-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"massive\",\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      required: true,\n      id: \"phone-field-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      id: \"phone-input-1\",\n      placeholder: \"(xxx)\",\n      value: this.state.phone1,\n      type: \"number\",\n      step: \"0.01\",\n      onChange: event => this.handleFormChange(\"phone1\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      id: \"phone-field-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      id: \"phone-input-2\",\n      placeholder: \"xxx\",\n      value: this.state.phone2,\n      type: \"number\",\n      onChange: event => this.handleFormChange(\"phone2\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      required: true,\n      id: \"phone-field-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      id: \"phone-input-3\",\n      placeholder: \"xxxx\",\n      value: this.state.phone3,\n      type: \"number\",\n      onChange: event => this.handleFormChange(\"phone3\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      width: 4,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.handleZipcodeError())), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Subscribe\")))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postToSubscriptionCreate: newArtist => dispatch(postToSubscriptionCreate(newArtist))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.sessionsReducer.currentUser,\n    isSubscribed: state.subscriptionReducer.isSubscribed\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscribe);","map":{"version":3,"sources":["/Users/theoweller/Documents/dev/Flatiron/module-5/final-project/fan-fam2/frontend/fan-fam-frontend/src/components/FanView/Subscribe.js"],"names":["React","Component","connect","Button","Form","Input","Header","Modal","Segment","Grid","postToSubscriptionCreate","Subscribe","state","phone1","phone2","phone3","zip","slug","payload","zipError","fetchArtistShowPage","fetch","then","r","json","data","setState","handleFormSubmit","isValidZip","test","phone","props","handleFormChange","fieldInputName","event","target","value","length","focusOnNextField","id","document","getElementById","focus","handleZipcodeError","zipInput","zipInputError","componentDidMount","match","params","currentUser","username","render","isSubscribed","title","mapDispatchToProps","dispatch","newArtist","mapStateToProps","sessionsReducer","subscriptionReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Input, Header, Modal, Segment, Grid} from 'semantic-ui-react'\nimport { postToSubscriptionCreate } from '../../actions/subscriptionActions'\nclass Subscribe extends Component {\n  state={ phone1: \"\", phone2: \"\", phone3: \"\", zip: \"\", slug: \"\", payload: {}, zipError: false }\n\n  /****************************************************************\n  FETCHES\n  ****************************************************************/\n\n  componentDidMount(){\n    const slug = this.props.match.params.slug\n    if(slug){\n      this.setState({...this.state, slug })\n      this.fetchArtistShowPage(slug)\n    } else {\n      this.fetchArtistShowPage(this.props.currentUser.username)\n    }\n  }\n\n  fetchArtistShowPage = (slug) => {\n    fetch(`http://localhost:3000/api/v1/subscribe/${slug}`)\n    .then(r => r.json())\n    .then(data => {\n      this.setState({...this.state, payload: data.payload})\n    })\n  }\n\n  handleFormSubmit = () => {\n    const isValidZip = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(this.state.zip);\n    const phone = \"1\" + `${this.state.phone1 + this.state.phone2 + this.state.phone3}`\n\n    if(isValidZip){\n      this.props.postToSubscriptionCreate({phone: phone, zip: this.state.zip, slug: this.state.slug})\n    } else {\n      this.setState({...this.state, zip: \"\", zipError: true})\n    }\n  }\n\n\n  /****************************************************************\n  FORM HELPERS\n  ****************************************************************/\n  handleFormChange = (fieldInputName, event) => {\n    switch(fieldInputName){\n      case \"phone1\":\n      if(event.target.value.length === 3){\n        this.setState( {...this.state, phone1: event.target.value}, () => {\n          this.focusOnNextField(\"2\")\n        })\n      } else {\n        this.setState( {...this.state, phone1: event.target.value} )\n      }\n      break;\n      case \"phone2\":\n        if(event.target.value.length === 3){\n          this.setState( {...this.state, phone2: event.target.value}, () => {\n            this.focusOnNextField(\"3\")\n          })\n        } else {\n          this.setState( {...this.state, phone2: event.target.value} )\n        }\n      break;\n      case \"phone3\":\n      if(event.target.value.length <= 4){\n        this.setState( {...this.state, phone3: event.target.value} )\n      }\n      break;\n      case \"zip\":\n        this.setState( {...this.state, zip: event.target.value} )\n      break;\n    }\n  }\n\n  focusOnNextField = (id) => {\n    document.getElementById(`phone-input-${id}`).focus()\n  }\n\n  handleZipcodeError = () => {\n    return !this.state.zipError ? this.zipInput() : this.zipInputError()\n  }\n\n  zipInputError = () => {\n    return (\n      <Form.Input\n      error\n      placeholder='Invalid zipcode'\n      value={this.state.zip}\n      name=\"password\"\n      onChange={(event) => this.handleFormChange(\"zip\", event)}/>)\n  }\n\n  zipInput = () => {\n    return (\n      <Form.Input\n      placeholder='Zipcode'\n      value={this.state.zip}\n      name=\"password\"\n      onChange={(event) => this.handleFormChange(\"zip\", event)}/>)\n  }\n\n//    moveOnMax = (field,nextFieldID) => {\n//   if(field.value.length >= field.maxLength){\n//     document.getElementById(nextFieldID).focus();\n//   }\n// }\n\n  render (){\n    return (\n      <div>\n\n      <Modal open={this.props.isSubscribed} basic size='small'>\n        <Header textAlign=\"center\" content='Thank you for subscribing' />\n      </Modal>\n\n\n      { this.state.payload.title && <Header as='h1' textAlign='center'>{`${this.state.payload.title}`}</Header> }\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n        <div id=\"fan-subscribe-form-container\">\n          <Grid>\n            <Form size=\"massive\" onSubmit={this.handleFormSubmit}>\n              <Grid.Row>\n                <Form.Group>\n\n                  <Form.Field required id=\"phone-field-1\">\n                    <Form.Input\n                    id=\"phone-input-1\"\n                    placeholder='(xxx)'\n                    value={this.state.phone1}\n                    type=\"number\"\n                    step=\"0.01\"\n                    onChange={(event) => this.handleFormChange(\"phone1\", event)}/>\n                  </Form.Field>\n\n                  <Form.Field required id=\"phone-field-2\">\n                    <Form.Input\n                    id=\"phone-input-2\"\n                    placeholder='xxx'\n                    value={this.state.phone2}\n                    type=\"number\"\n                    onChange={(event) => this.handleFormChange(\"phone2\", event)}/>\n                  </Form.Field>\n\n                  <Form.Field required id=\"phone-field-3\">\n                    <Form.Input\n                    id=\"phone-input-3\"\n                    placeholder='xxxx'\n                    value={this.state.phone3}\n                    type=\"number\"\n                    onChange={(event) => this.handleFormChange(\"phone3\", event)}/>\n                  </Form.Field>\n\n                </Form.Group>\n              </Grid.Row>\n              <Grid.Row>\n                <Form.Field width={4} required>\n                  {this.handleZipcodeError()}\n                </Form.Field>\n              </Grid.Row>\n\n              <Button type='submit'>Subscribe</Button>\n            </Form>\n          </Grid>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {postToSubscriptionCreate: (newArtist)=> dispatch(postToSubscriptionCreate(newArtist))}\n}\n\nconst mapStateToProps = (state) => {\n  return {currentUser: state.sessionsReducer.currentUser, isSubscribed: state.subscriptionReducer.isSubscribed}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscribe)\n"]},"metadata":{},"sourceType":"module"}